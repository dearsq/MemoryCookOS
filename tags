!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALIGN	include/linux/kernel.h	32;"	d
ARCH_LOW_ADDRESS_LIMIT	lib/mm/bootmem.c	31;"	d	file:
ARRAY_SIZE	include/linux/kernel.h	60;"	d
ATOMIC_INIT	include/linux/atomic.h	4;"	d
BIT	include/linux/bitops.h	7;"	d
BITMAP_show	lib/debug.c	/^void BITMAP_show(unsigned int *bitmap,unsigned long bits)$/;"	f
BITS_PER_BYTE	include/linux/bitops.h	10;"	d
BITS_PER_LONG	include/linux/bitops.h	5;"	d
BITS_TO_LONGS	include/linux/bitops.h	11;"	d
BIT_MASK	include/linux/bitops.h	8;"	d
BIT_WORD	include/linux/bitops.h	9;"	d
BK_show	lib/debug.c	/^void BK_show(char *s)$/;"	f
BOOTMEM_DEFAULT	include/linux/bootmem.h	8;"	d
BOOTMEM_EXCLUSIVE	include/linux/bootmem.h	9;"	d
BUG	include/linux/debug.h	31;"	d
BUG_ON	include/linux/debug.h	27;"	d
BYTE_MODIFY	include/linux/config.h	14;"	d
B_show	lib/debug.c	/^void B_show(char *s)$/;"	f
CC	init/Makefile	/^CC=gcc$/;"	m
CONFIG_ARM_L1_CACHE_SHIFT	include/linux/config.h	70;"	d
CONFIG_BANK0_SIZE	include/linux/config.h	25;"	d
CONFIG_BANK0_SIZE	include/linux/config.h	27;"	d
CONFIG_BANK0_START	include/linux/config.h	23;"	d
CONFIG_BANK1_SIZE	include/linux/config.h	37;"	d
CONFIG_BANK1_START	include/linux/config.h	35;"	d
CONFIG_BOTH_BANKS	include/linux/config.h	9;"	d
CONFIG_DEBUG_PAGEALLOC	include/linux/config.h	78;"	d
CONFIG_FLAT_NODE_MEM_MAP	include/linux/config.h	57;"	d
CONFIG_HIGHMEM	include/linux/config.h	53;"	d
CONFIG_KMEMCHECK	include/linux/config.h	74;"	d
CONFIG_MEMORY_SIZE	include/linux/config.h	19;"	d
CONFIG_MMU	include/linux/config.h	90;"	d
CONFIG_MM_OWNER	include/linux/config.h	61;"	d
CONFIG_VECTORS_BASE	include/linux/config.h	86;"	d
CONFIG_VMALLOC_RESERVE	include/linux/config.h	48;"	d
CONFIG_WANT_PAGE_DEBUG_FLAGS	include/linux/config.h	82;"	d
CONSISTENT_BASE	include/linux/memory.h	24;"	d
CONSISTENT_DMA_SIZE	include/linux/memory.h	20;"	d
CONSISTENT_END	include/linux/memory.h	23;"	d
CPOLICY_BUFFERED	lib/mm/mmu.c	29;"	d	file:
CPOLICY_UNCACHED	lib/mm/mmu.c	28;"	d	file:
CPOLICY_WRITEALLOC	lib/mm/mmu.c	32;"	d	file:
CPOLICY_WRITEBACK	lib/mm/mmu.c	31;"	d	file:
CPOLICY_WRITETHROUGH	lib/mm/mmu.c	30;"	d	file:
CPU_ARCH_ARMv3	include/asm/system.h	5;"	d
CPU_ARCH_ARMv4	include/asm/system.h	6;"	d
CPU_ARCH_ARMv4T	include/asm/system.h	7;"	d
CPU_ARCH_ARMv5	include/asm/system.h	8;"	d
CPU_ARCH_ARMv5T	include/asm/system.h	9;"	d
CPU_ARCH_ARMv5TE	include/asm/system.h	10;"	d
CPU_ARCH_ARMv5TEJ	include/asm/system.h	11;"	d
CPU_ARCH_ARMv6	include/asm/system.h	12;"	d
CPU_ARCH_ARMv7	include/asm/system.h	13;"	d
CPU_ARCH_UNKNOWN	include/asm/system.h	4;"	d
CR_A	include/asm/system.h	19;"	d
CR_AFE	include/asm/system.h	43;"	d
CR_B	include/asm/system.h	25;"	d
CR_C	include/asm/system.h	20;"	d
CR_D	include/asm/system.h	23;"	d
CR_DT	include/asm/system.h	34;"	d
CR_EE	include/asm/system.h	41;"	d
CR_F	include/asm/system.h	28;"	d
CR_FI	include/asm/system.h	37;"	d
CR_I	include/asm/system.h	30;"	d
CR_IT	include/asm/system.h	35;"	d
CR_L	include/asm/system.h	24;"	d
CR_L4	include/asm/system.h	33;"	d
CR_M	include/asm/system.h	18;"	d
CR_P	include/asm/system.h	22;"	d
CR_R	include/asm/system.h	27;"	d
CR_RR	include/asm/system.h	32;"	d
CR_S	include/asm/system.h	26;"	d
CR_ST	include/asm/system.h	36;"	d
CR_TE	include/asm/system.h	44;"	d
CR_TRE	include/asm/system.h	42;"	d
CR_U	include/asm/system.h	38;"	d
CR_V	include/asm/system.h	31;"	d
CR_VE	include/asm/system.h	40;"	d
CR_W	include/asm/system.h	21;"	d
CR_XP	include/asm/system.h	39;"	d
CR_Z	include/asm/system.h	29;"	d
DEBUG	include/linux/debug.h	7;"	d
DEBUG_FLAGS	init/Makefile	/^DEBUG_FLAGS=-C -E -g -Wfatal-errors $/;"	m
DECLARE_BITMAP	include/linux/bitops.h	23;"	d
DIV_ROUND_UP	include/linux/kernel.h	49;"	d
DOMAIN_IO	include/linux/domain.h	7;"	d
DOMAIN_KERNEL	include/linux/domain.h	4;"	d
DOMAIN_TABLE	include/linux/domain.h	5;"	d
DOMAIN_USER	include/linux/domain.h	6;"	d
EBUSY	include/linux/error.h	4;"	d
ENOMEM	include/linux/error.h	5;"	d
FIXADDR_SIZE	include/linux/fixmap.h	18;"	d
FIXADDR_START	include/linux/fixmap.h	16;"	d
FIXADDR_TOP	include/linux/fixmap.h	17;"	d
FIX_KMAP_DEBIG	include/linux/fixmap.h	20;"	d
FIX_KMAP_END	include/linux/fixmap.h	21;"	d
FLAGS	init/Makefile	/^FLAGS=-g -pg$/;"	m
GFP_HIGHUSER_MOVABLE	include/linux/gfp.h	47;"	d
GFP_KERNEL	include/linux/gfp.h	51;"	d
GFP_ZONEMASK	include/linux/gfp.h	46;"	d
GFP_ZONE_TABLE	include/linux/gfp.h	101;"	d
GOLDEN_RATIO_PRIME_32	include/linux/hash.h	6;"	d
GOLDEN_RATIO_PRIME_64	include/linux/hash.h	8;"	d
INC	init/Makefile	/^INC= -I.\/$/;"	m
INIT_LIST_HEAD	include/linux/list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
INIT_MEMBLOCK_REGIONS	include/linux/memblock.h	17;"	d
IORESOURCE_BITS	include/linux/ioport.h	20;"	d
IORESOURCE_BUS	include/linux/ioport.h	26;"	d
IORESOURCE_BUSY	include/linux/ioport.h	28;"	d
IORESOURCE_DMA	include/linux/ioport.h	25;"	d
IORESOURCE_IO	include/linux/ioport.h	22;"	d
IORESOURCE_IRQ	include/linux/ioport.h	24;"	d
IORESOURCE_MEM	include/linux/ioport.h	23;"	d
IORESOURCE_TYPE_BITS	include/linux/ioport.h	21;"	d
IO_SPACE_LIMIT	include/asm/io.h	4;"	d
KERNEL_RAM_VADDR	include/linux/highmem.h	8;"	d
L1_CACHE_ALIGN	include/asm/cache.h	9;"	d
L1_CACHE_BYTES	include/asm/cache.h	7;"	d
L1_CACHE_SHIFT	include/asm/cache.h	6;"	d
L1_CACHE_SIZE	include/asm/cache.h	8;"	d
LAST_PKMAP	include/linux/highmem.h	14;"	d
LAST_PKMAP_MASK	include/linux/highmem.h	15;"	d
LIST_HEAD	include/linux/list.h	14;"	d
LIST_HEAD_INIT	include/linux/list.h	12;"	d
LIST_POISON1	include/linux/poison.h	13;"	d
LIST_POISON2	include/linux/poison.h	14;"	d
LOG_FILE	init/Makefile	/^LOG_FILE=debug.log$/;"	m
LRU_ACTIVE	include/linux/mmzone.h	70;"	d
LRU_ACTIVE_ANON	include/linux/mmzone.h	/^	LRU_ACTIVE_ANON   = LRU_BASE + LRU_ACTIVE,$/;"	e	enum:lru_list
LRU_ACTIVE_FILE	include/linux/mmzone.h	/^	LRU_ACTIVE_FILE   = LRU_BASE + LRU_FILE + LRU_ACTIVE,$/;"	e	enum:lru_list
LRU_BASE	include/linux/mmzone.h	69;"	d
LRU_FILE	include/linux/mmzone.h	71;"	d
LRU_INACTIVE_ANON	include/linux/mmzone.h	/^	LRU_INACTIVE_ANON = LRU_BASE,$/;"	e	enum:lru_list
LRU_INACTIVE_FILE	include/linux/mmzone.h	/^	LRU_INACTIVE_FILE = LRU_BASE + LRU_FILE,$/;"	e	enum:lru_list
LRU_UNEVICTABLE	include/linux/mmzone.h	/^	LRU_UNEVICTABLE,$/;"	e	enum:lru_list
L_PTE_DIRTY	include/linux/pgtable.h	35;"	d
L_PTE_FILE	include/linux/pgtable.h	34;"	d
L_PTE_MT_BUFFERABLE	include/linux/pgtable.h	46;"	d
L_PTE_MT_DEV_CACHED	include/linux/pgtable.h	54;"	d
L_PTE_MT_DEV_NONSHARED	include/linux/pgtable.h	52;"	d
L_PTE_MT_DEV_SHARED	include/linux/pgtable.h	51;"	d
L_PTE_MT_DEV_WC	include/linux/pgtable.h	53;"	d
L_PTE_MT_MASK	include/linux/pgtable.h	55;"	d
L_PTE_MT_MINICACHE	include/linux/pgtable.h	49;"	d
L_PTE_MT_UNCACHED	include/linux/pgtable.h	45;"	d
L_PTE_MT_WRITEALLOC	include/linux/pgtable.h	50;"	d
L_PTE_MT_WRITEBACK	include/linux/pgtable.h	48;"	d
L_PTE_MT_WRITETHROUGH	include/linux/pgtable.h	47;"	d
L_PTE_PRESENT	include/linux/pgtable.h	32;"	d
L_PTE_RDONLY	include/linux/pgtable.h	36;"	d
L_PTE_SHARED	include/linux/pgtable.h	39;"	d
L_PTE_USER	include/linux/pgtable.h	37;"	d
L_PTE_XN	include/linux/pgtable.h	38;"	d
L_PTE_YOUNG	include/linux/pgtable.h	33;"	d
MAX_BANK0_PHYS_ADDR	include/linux/config.h	29;"	d
MAX_BANK1_PHYS_ADDR	include/linux/config.h	38;"	d
MAX_DMA_ADDRESS	include/asm/dma.h	5;"	d
MAX_MEMBLOCK	include/linux/memblock.h	16;"	d
MAX_MEMBLOCK_TYPE	include/linux/memblock.h	15;"	d
MAX_NR_ZONES	include/linux/highmem.h	20;"	d
MAX_NR_ZONES	include/linux/highmem.h	22;"	d
MAX_NUMNODES	include/linux/numa.h	6;"	d
MAX_ORDER	include/linux/mmzone.h	63;"	d
MAX_ORDER_NR_PAGES	include/linux/mmzone.h	64;"	d
MAX_REGIONS	include/linux/memblock.h	14;"	d
MAX_ZONELISTS	include/linux/mmzone.h	59;"	d
MAX_ZONELISTS	include/linux/mmzone.h	61;"	d
MAX_ZONES_PER_ZONELIST	include/linux/mmzone.h	67;"	d
MEM0_OFFSET	lib/boot_arch.c	/^unsigned int MEM0_OFFSET;$/;"	v
MEM1_OFFSET	lib/boot_arch.c	/^unsigned int MEM1_OFFSET;$/;"	v
MEMBLOCK_ALLOC_ACCESSIBLE	include/linux/memblock.h	27;"	d
MEMBLOCK_ALLOC_ANYWHERE	include/linux/memblock.h	26;"	d
MEMBLOCK_ERROR	include/linux/memblock.h	18;"	d
MEMMAP_EARLY	include/linux/mmzone.h	/^	MEMMAP_EARLY,$/;"	e	enum:memmap_context
MEMMAP_HOTPLUG	include/linux/mmzone.h	/^	MEMMAP_HOTPLUG,$/;"	e	enum:memmap_context
MEMORY_HOLE_SIZE	include/linux/config.h	34;"	d
MIGRATE_ISOLATE	include/linux/mmzone.h	312;"	d
MIGRATE_ISOLATE	include/linux/mmzone.h	56;"	d
MIGRATE_MOVABLE	include/linux/mmzone.h	309;"	d
MIGRATE_MOVABLE	include/linux/mmzone.h	53;"	d
MIGRATE_PCPTYPES	include/linux/mmzone.h	310;"	d
MIGRATE_PCPTYPES	include/linux/mmzone.h	54;"	d
MIGRATE_RECLAIMABLE	include/linux/mmzone.h	308;"	d
MIGRATE_RECLAIMABLE	include/linux/mmzone.h	52;"	d
MIGRATE_RESERVE	include/linux/mmzone.h	311;"	d
MIGRATE_RESERVE	include/linux/mmzone.h	55;"	d
MIGRATE_TYPES	include/linux/mmzone.h	313;"	d
MIGRATE_TYPES	include/linux/mmzone.h	57;"	d
MIGRATE_UNMOVABLE	include/linux/mmzone.h	307;"	d
MIGRATE_UNMOVABLE	include/linux/mmzone.h	51;"	d
MLK	lib/mm/init.c	318;"	d	file:
MLK	lib/mm/init.c	353;"	d	file:
MLK_ROUNDUP	lib/mm/init.c	320;"	d	file:
MLK_ROUNDUP	lib/mm/init.c	355;"	d	file:
MLM	lib/mm/init.c	319;"	d	file:
MLM	lib/mm/init.c	354;"	d	file:
MMINIT_TRACE	include/linux/internal.h	/^	MMINIT_TRACE,$/;"	e	enum:mminit_level
MMINIT_VERIFY	include/linux/internal.h	/^	MMINIT_VERIFY,$/;"	e	enum:mminit_level
MMINIT_WARNING	include/linux/internal.h	/^	MMINIT_WARNING,$/;"	e	enum:mminit_level
MM_NOEXPAND	include/linux/memblock.h	21;"	d
MM_NOREGION	include/linux/memblock.h	20;"	d
MODULES_END	include/linux/memory.h	14;"	d
MODULES_END	include/linux/memory.h	16;"	d
MODULES_VADDR	include/linux/pgtable.h	118;"	d
MT_CACHECLEAN	include/linux/map.h	18;"	d
MT_DEVICE	include/linux/io.h	8;"	d
MT_DEVICE_CACHED	include/linux/io.h	10;"	d
MT_DEVICE_NONSHARED	include/linux/io.h	9;"	d
MT_DEVICE_WC	include/linux/io.h	11;"	d
MT_HIGH_VECTORS	include/linux/map.h	21;"	d
MT_LOW_VECTORS	include/linux/map.h	20;"	d
MT_MEMORY	include/linux/map.h	22;"	d
MT_MEMORY_DTCM	include/linux/map.h	25;"	d
MT_MEMORY_ITCM	include/linux/map.h	26;"	d
MT_MEMORY_NONCACHED	include/linux/map.h	24;"	d
MT_MINICLEAN	include/linux/map.h	19;"	d
MT_ROM	include/linux/map.h	23;"	d
MT_UNCACHED	include/linux/map.h	17;"	d
M_show	lib/debug.c	/^void M_show(phys_addr_t start,phys_addr_t end)$/;"	f
NODES_SHIFT	include/linux/numa.h	4;"	d
NODE_DATA	include/linux/mmzone.h	241;"	d
NR_ACTIVE_ANON	include/linux/mmzone.h	/^	NR_ACTIVE_ANON,$/;"	e	enum:zone_stat_item
NR_ACTIVE_FILE	include/linux/mmzone.h	/^	NR_ACTIVE_FILE,$/;"	e	enum:zone_stat_item
NR_ANON_PAGES	include/linux/mmzone.h	/^	NR_ANON_PAGES, \/* Mapped anonymous pages *\/$/;"	e	enum:zone_stat_item
NR_ANON_TRANSPARENT_HUGEPAGES	include/linux/mmzone.h	/^	NR_ANON_TRANSPARENT_HUGEPAGES,$/;"	e	enum:zone_stat_item
NR_BANKS	include/linux/setup.h	11;"	d
NR_BANKS	include/linux/setup.h	9;"	d
NR_BOUNCE	include/linux/mmzone.h	/^	NR_BOUNCE,$/;"	e	enum:zone_stat_item
NR_DIRTIED	include/linux/mmzone.h	/^	NR_DIRTIED, \/* page dirtyings since bootup *\/$/;"	e	enum:zone_stat_item
NR_FILE_DIRTY	include/linux/mmzone.h	/^	NR_FILE_DIRTY,$/;"	e	enum:zone_stat_item
NR_FILE_MAPPED	include/linux/mmzone.h	/^	NR_FILE_MAPPED, \/* pagecache pages mapped into pagetables.$/;"	e	enum:zone_stat_item
NR_FILE_PAGES	include/linux/mmzone.h	/^	NR_FILE_PAGES,$/;"	e	enum:zone_stat_item
NR_FREE_PAGES	include/linux/mmzone.h	/^	NR_FREE_PAGES,$/;"	e	enum:zone_stat_item
NR_INACTIVE_ANON	include/linux/mmzone.h	/^	NR_INACTIVE_ANON = NR_LRU_BASE, \/* must match order of LRU_[IN]ACTIVE *\/$/;"	e	enum:zone_stat_item
NR_INACTIVE_FILE	include/linux/mmzone.h	/^	NR_INACTIVE_FILE,$/;"	e	enum:zone_stat_item
NR_ISOLATED_ANON	include/linux/mmzone.h	/^	NR_ISOLATED_ANON,  \/* Temporary isolated pages from anon lru *\/$/;"	e	enum:zone_stat_item
NR_ISOLATED_FILE	include/linux/mmzone.h	/^	NR_ISOLATED_FILE,  \/* Temporary isolated pages from file lru *\/$/;"	e	enum:zone_stat_item
NR_KERNEL_STACK	include/linux/mmzone.h	/^	NR_KERNEL_STACK,$/;"	e	enum:zone_stat_item
NR_LRU_BASE	include/linux/mmzone.h	/^	NR_LRU_BASE,$/;"	e	enum:zone_stat_item
NR_LRU_LISTS	include/linux/mmzone.h	/^	NR_LRU_LISTS$/;"	e	enum:lru_list
NR_MLOCK	include/linux/mmzone.h	/^	NR_MLOCK, \/* mlock()ed pages found and moved off LRU *\/$/;"	e	enum:zone_stat_item
NR_NODE_STATES	include/linux/nodemask.h	/^	NR_NODE_STATES,$/;"	e	enum:node_states
NR_PAGEBLOCK_BITS	include/linux/pageblock-flags.h	/^	NR_PAGEBLOCK_BITS$/;"	e	enum:pageblock_bits
NR_PAGEFLAGS	include/linux/bounds.h	4;"	d
NR_PAGETABLE	include/linux/mmzone.h	/^	NR_PAGETABLE, \/* used for pagetables *\/$/;"	e	enum:zone_stat_item
NR_SHMEM	include/linux/mmzone.h	/^	NR_SHMEM, \/* shmem pages (included tmpfs \/ GEM pages)*\/$/;"	e	enum:zone_stat_item
NR_SLAB_RECLAIMABLE	include/linux/mmzone.h	/^	NR_SLAB_RECLAIMABLE,$/;"	e	enum:zone_stat_item
NR_SLAB_UNRECLAIMABLE	include/linux/mmzone.h	/^	NR_SLAB_UNRECLAIMABLE,$/;"	e	enum:zone_stat_item
NR_UNEVICTABLE	include/linux/mmzone.h	/^	NR_UNEVICTABLE,$/;"	e	enum:zone_stat_item
NR_UNSTABLE_NFS	include/linux/mmzone.h	/^	NR_UNSTABLE_NFS, \/* NFS unstable pages *\/$/;"	e	enum:zone_stat_item
NR_VMSCAN_WRITE	include/linux/mmzone.h	/^	NR_VMSCAN_WRITE,$/;"	e	enum:zone_stat_item
NR_VM_ZONE_STAT_ITEMS	include/linux/mmzone.h	/^	NR_VM_ZONE_STAT_ITEMS$/;"	e	enum:zone_stat_item
NR_WMARK	include/linux/mmzone.h	/^	NR_WMARK$/;"	e	enum:zone_watermarks
NR_WRITEBACK_TEMP	include/linux/mmzone.h	/^	NR_WRITEBACK_TEMP, \/* Writeback using temporary buffers *\/$/;"	e	enum:zone_stat_item
NR_WRITEBASK	include/linux/mmzone.h	/^	NR_WRITEBASK,$/;"	e	enum:zone_stat_item
NR_WRITTEN	include/linux/mmzone.h	/^	NR_WRITTEN, \/* page wirtings since bootup *\/$/;"	e	enum:zone_stat_item
NUMA_BUILD	include/linux/kernel.h	52;"	d
NUMA_BUILD	include/linux/kernel.h	54;"	d
N_CPU	include/linux/nodemask.h	/^	N_CPU, \/* The node has one or more cpus *\/$/;"	e	enum:node_states
N_HIGH_MEMORY	include/linux/nodemask.h	/^	N_HIGH_MEMORY,$/;"	e	enum:node_states
N_NORMAL_MEMORY	include/linux/nodemask.h	/^	N_NORMAL_MEMORY, \/* The node has regular memory *\/$/;"	e	enum:node_states
N_ONLINE	include/linux/nodemask.h	/^	N_ONLINE,   \/* The node is online *\/$/;"	e	enum:node_states
N_POSSIBLE	include/linux/nodemask.h	/^	N_POSSIBLE, \/* The node could become online at some point *\/$/;"	e	enum:node_states
OBJS	init/Makefile	/^OBJS = ${SRCS:.c=.o}$/;"	m
OPT_ZONE_DMA	include/linux/gfp.h	54;"	d
OPT_ZONE_DMA	include/linux/gfp.h	56;"	d
OPT_ZONE_DMA32	include/linux/gfp.h	64;"	d
OPT_ZONE_DMA32	include/linux/gfp.h	66;"	d
OPT_ZONE_HIGHMEM	include/linux/gfp.h	59;"	d
OPT_ZONE_HIGHMEM	include/linux/gfp.h	61;"	d
OVERCOMMIT_ALWAYS	include/linux/mman.h	5;"	d
OVERCOMMIT_GUESS	include/linux/mman.h	4;"	d
OVERCOMMIT_NEVER	include/linux/mman.h	6;"	d
PAGE_ALIGN	include/linux/page.h	26;"	d
PAGE_DEBUG_FLAG_POISON	include/linux/page-debug-flags.h	/^	PAGE_DEBUG_FLAG_POISON, \/* Page is poisoned *\/$/;"	e	enum:page_debug_flags
PAGE_FLAGS_CHECK_AT_FREE	include/linux/page-flags.h	104;"	d
PAGE_FLAGS_CHECK_AT_PREP	include/linux/page-flags.h	130;"	d
PAGE_MASK	include/linux/page.h	24;"	d
PAGE_OFFSET	include/linux/page.h	30;"	d
PAGE_POISON	include/linux/poison.h	5;"	d
PAGE_SHIFT	include/linux/page.h	22;"	d
PAGE_SIZE	include/linux/page.h	23;"	d
PA_HASH_ORDER	lib/mm/highmem.c	7;"	d	file:
PB_migrate	include/linux/pageblock-flags.h	/^	PB_migrate,$/;"	e	enum:pageblock_bits
PB_migrate_end	include/linux/pageblock-flags.h	/^	PB_migrate_end = PB_migrate + 3 - 1,$/;"	e	enum:pageblock_bits
PFN_ALIGN	include/linux/pfn.h	4;"	d
PFN_DOWN	include/linux/page.h	28;"	d
PFN_DOWN	include/linux/pfn.h	6;"	d
PFN_PHYS	include/linux/pfn.h	7;"	d
PFN_UP	include/linux/page.h	27;"	d
PFN_UP	include/linux/pfn.h	5;"	d
PGDIR_MASK	include/linux/pgtable.h	9;"	d
PGDIR_SHIFT	include/linux/pgtable.h	7;"	d
PGDIR_SIZE	include/linux/pgtable.h	8;"	d
PG_LEVEL_1G	include/linux/pgtable_types.h	/^	PG_LEVEL_1G,$/;"	e	enum:__anon10
PG_LEVEL_2M	include/linux/pgtable_types.h	/^	PG_LEVEL_2M,$/;"	e	enum:__anon10
PG_LEVEL_4K	include/linux/pgtable_types.h	/^	PG_LEVEL_4K,$/;"	e	enum:__anon10
PG_LEVEL_NONE	include/linux/pgtable_types.h	/^	PG_LEVEL_NONE,$/;"	e	enum:__anon10
PG_LEVEL_NUM	include/linux/pgtable_types.h	/^	PG_LEVEL_NUM$/;"	e	enum:__anon10
PG_active	include/linux/page-flags.h	/^	PG_active,$/;"	e	enum:pageflags
PG_arch_1	include/linux/page-flags.h	/^	PG_arch_1,$/;"	e	enum:pageflags
PG_comound_lock	include/linux/page-flags.h	/^	PG_comound_lock,$/;"	e	enum:pageflags
PG_dirty	include/linux/page-flags.h	/^	PG_dirty,$/;"	e	enum:pageflags
PG_error	include/linux/page-flags.h	/^	PG_error,$/;"	e	enum:pageflags
PG_head	include/linux/page-flags.h	/^	PG_head,           \/* A head page *\/$/;"	e	enum:pageflags
PG_head_tail_mask	include/linux/page-flags.h	124;"	d
PG_hwpoison	include/linux/page-flags.h	/^	PG_hwpoison,       \/* Hardware poisoned page *\/   $/;"	e	enum:pageflags
PG_locked	include/linux/page-flags.h	/^	PG_locked,         \/* Page is locked.Don't touch. *\/$/;"	e	enum:pageflags
PG_lru	include/linux/page-flags.h	/^	PG_lru,$/;"	e	enum:pageflags
PG_mappedtodisk	include/linux/page-flags.h	/^	PG_mappedtodisk,   \/* Has blocks allocated on-disk *\/$/;"	e	enum:pageflags
PG_mlocked	include/linux/page-flags.h	/^	PG_mlocked,        \/* Page is vma mlocked *\/$/;"	e	enum:pageflags
PG_owner_priv_1	include/linux/page-flags.h	/^	PG_owner_priv_1,   \/* Owner use.If pagecache,fs may use *\/$/;"	e	enum:pageflags
PG_private	include/linux/page-flags.h	/^	PG_private,        \/* If pagecache,has fs-private data *\/$/;"	e	enum:pageflags
PG_private_2	include/linux/page-flags.h	/^	PG_private_2,      \/* If pagecache,has fs aux data *\/$/;"	e	enum:pageflags
PG_reclaim	include/linux/page-flags.h	/^	PG_reclaim,        \/* To be reclaimed asap *\/$/;"	e	enum:pageflags
PG_referenced	include/linux/page-flags.h	/^	PG_referenced,$/;"	e	enum:pageflags
PG_reserved	include/linux/page-flags.h	/^	PG_reserved,$/;"	e	enum:pageflags
PG_slab	include/linux/page-flags.h	/^	PG_slab,$/;"	e	enum:pageflags
PG_swapbacked	include/linux/page-flags.h	/^	PG_swapbacked,     \/* Page is backed by RAM \/swap *\/$/;"	e	enum:pageflags
PG_swapcache	include/linux/page-flags.h	/^	PG_swapcache,      \/* Swap page:swp_entry_t in private *\/$/;"	e	enum:pageflags
PG_tail	include/linux/page-flags.h	/^	PG_tail,           \/* A tail page *\/$/;"	e	enum:pageflags
PG_uncached	include/linux/page-flags.h	/^	PG_uncached,       \/* Page has been mapped as uncached *\/$/;"	e	enum:pageflags
PG_unevictable	include/linux/page-flags.h	/^	PG_unevictable,    \/* Page is "unevictable " *\/$/;"	e	enum:pageflags
PG_uptodate	include/linux/page-flags.h	/^	PG_uptodate,$/;"	e	enum:pageflags
PG_writeback	include/linux/page-flags.h	/^	PG_writeback,      \/* Page is under writeback *\/$/;"	e	enum:pageflags
PHYS_OFFSET	include/linux/page.h	31;"	d
PHYS_PFN_OFFSET	include/linux/page.h	32;"	d
PKMAP_ADDR	include/linux/highmem.h	17;"	d
PKMAP_BASE	include/linux/highmem.h	13;"	d
PKMAP_NR	include/linux/highmem.h	16;"	d
PMD_BIT4	include/linux/pgtable-hwdef.h	13;"	d
PMD_DOMAIN	include/linux/pgtable-hwdef.h	14;"	d
PMD_PROTECTION	include/linux/pgtable-hwdef.h	15;"	d
PMD_SECT_APX	include/linux/pgtable-hwdef.h	25;"	d
PMD_SECT_AP_READ	include/linux/pgtable-hwdef.h	23;"	d
PMD_SECT_AP_WRITE	include/linux/pgtable-hwdef.h	22;"	d
PMD_SECT_BUFFERABLE	include/linux/pgtable-hwdef.h	19;"	d
PMD_SECT_BUFFERED	include/linux/pgtable-hwdef.h	31;"	d
PMD_SECT_CACHEABLE	include/linux/pgtable-hwdef.h	20;"	d
PMD_SECT_MINICACHE	include/linux/pgtable-hwdef.h	34;"	d
PMD_SECT_NONSHARED_DEV	include/linux/pgtable-hwdef.h	37;"	d
PMD_SECT_S	include/linux/pgtable-hwdef.h	26;"	d
PMD_SECT_SUPER	include/linux/pgtable-hwdef.h	28;"	d
PMD_SECT_TEX	include/linux/pgtable-hwdef.h	24;"	d
PMD_SECT_UNCACHED	include/linux/pgtable-hwdef.h	30;"	d
PMD_SECT_WB	include/linux/pgtable-hwdef.h	33;"	d
PMD_SECT_WBWA	include/linux/pgtable-hwdef.h	35;"	d
PMD_SECT_WT	include/linux/pgtable-hwdef.h	32;"	d
PMD_SECT_XN	include/linux/pgtable-hwdef.h	21;"	d
PMD_SECT_nG	include/linux/pgtable-hwdef.h	27;"	d
PMD_SHIFT	include/linux/pgtable.h	11;"	d
PMD_SIZE	include/linux/pgtable.h	12;"	d
PMD_TYPE_FAULT	include/linux/pgtable-hwdef.h	10;"	d
PMD_TYPE_MASK	include/linux/pgtable-hwdef.h	9;"	d
PMD_TYPE_SECT	include/linux/pgtable-hwdef.h	12;"	d
PMD_TYPE_TABLE	include/linux/pgtable-hwdef.h	11;"	d
POISON_POINTER_DELTA	include/linux/poison.h	7;"	d
PROT_PTE_DEVICE	lib/mm/mmu.c	34;"	d	file:
PROT_SECT_DEVICE	lib/mm/mmu.c	35;"	d	file:
PTE_HWTABLE_OFF	include/linux/pgtable.h	19;"	d
PTE_HWTABLE_PTRS	include/linux/pgtable.h	18;"	d
PTE_HWTABLE_SIZE	include/linux/pgtable.h	20;"	d
PTRS_PER_PGD	include/linux/pgtable.h	14;"	d
PTRS_PER_PMD	include/linux/pgtable.h	15;"	d
PTRS_PER_PTE	include/linux/pgtable.h	16;"	d
PageCompound	lib/mm/page_alloc.c	86;"	d	file:
PageHighMem	include/linux/page-flags.h	159;"	d
RED_ACTIVE	include/linux/memblock.h	24;"	d
RED_INACTIVE	include/linux/memblock.h	23;"	d
R_show	lib/debug.c	/^void R_show(char *s)$/;"	f
SMP_CACHE_BYTES	include/asm/cache.h	10;"	d
SRCS	init/Makefile	/^SRCS = main.c \\$/;"	m
ST_bootmem_data	lib/debug.c	/^void ST_bootmem_data(struct bootmem_data *bdata)$/;"	f
ST_node_zones	lib/debug.c	/^void ST_node_zones(struct zone *zone,int nr)$/;"	f
ST_page	lib/debug.c	/^void ST_page(struct page *page)$/;"	f
ST_pglist_data	lib/debug.c	/^void ST_pglist_data(void)$/;"	f
ST_zone	lib/debug.c	/^void ST_zone(struct zone *zone)$/;"	f
ST_zone_reclaim_stat	lib/debug.c	/^void ST_zone_reclaim_stat(struct zone_reclaim_stat *zr)$/;"	f
ST_zonelist	lib/debug.c	/^void ST_zonelist(struct zonelist *zl)$/;"	f
ST_zonelist_cache	lib/debug.c	/^void ST_zonelist_cache(struct zonelist_cache *zc)$/;"	f
SYSTEM_BOOTING	include/linux/config.h	65;"	d
SZ_128K	include/linux/types.h	52;"	d
SZ_128M	include/linux/types.h	36;"	d
SZ_16K	include/linux/types.h	49;"	d
SZ_16M	include/linux/types.h	33;"	d
SZ_1G	include/linux/types.h	40;"	d
SZ_1K	include/linux/types.h	45;"	d
SZ_1M	include/linux/types.h	29;"	d
SZ_256K	include/linux/types.h	53;"	d
SZ_256M	include/linux/types.h	37;"	d
SZ_2G	include/linux/types.h	41;"	d
SZ_2K	include/linux/types.h	46;"	d
SZ_2M	include/linux/types.h	30;"	d
SZ_32K	include/linux/types.h	50;"	d
SZ_32M	include/linux/types.h	34;"	d
SZ_4G	include/linux/types.h	42;"	d
SZ_4K	include/linux/types.h	47;"	d
SZ_4M	include/linux/types.h	31;"	d
SZ_512K	include/linux/types.h	54;"	d
SZ_512M	include/linux/types.h	38;"	d
SZ_64K	include/linux/types.h	51;"	d
SZ_64M	include/linux/types.h	35;"	d
SZ_8G	include/linux/types.h	43;"	d
SZ_8K	include/linux/types.h	48;"	d
SZ_8M	include/linux/types.h	32;"	d
SetPageReserved	include/linux/page-flags.h	/^static inline void SetPageReserved(struct page *page)$/;"	f
TARGET	init/Makefile	/^TARGET=align$/;"	m
TASK_SIZE	include/linux/memory.h	22;"	d
VIRTUAL_MEMORY_SIZE	include/linux/config.h	18;"	d
VMALLOC_END	include/linux/config.h	44;"	d
VMALLOC_OFFSET	include/linux/pgtable.h	124;"	d
VMALLOC_START	include/linux/pgtable.h	125;"	d
VM_BUG_ON	include/linux/debug.h	29;"	d
V_show	lib/debug.c	/^void V_show(void *addr,unsigned long size)$/;"	f
WARN_ON	include/linux/debug.h	28;"	d
WMARK_HIGH	include/linux/mmzone.h	/^	WMARK_HIGH,$/;"	e	enum:zone_watermarks
WMARK_LOW	include/linux/mmzone.h	/^	WMARK_LOW,$/;"	e	enum:zone_watermarks
WMARK_MIN	include/linux/mmzone.h	/^	WMARK_MIN,$/;"	e	enum:zone_watermarks
ZONELIST_ORDER_DEFAULT	lib/mm/page_alloc.c	34;"	d	file:
ZONELIST_ORDER_NODE	lib/mm/page_alloc.c	35;"	d	file:
ZONELIST_ORDER_ZONE	lib/mm/page_alloc.c	36;"	d	file:
ZONES_SHIFT	include/linux/mmzone.h	41;"	d
ZONES_SHIFT	include/linux/mmzone.h	43;"	d
ZONES_SHIFT	include/linux/mmzone.h	45;"	d
ZONES_SHIFT	include/linux/mmzone.h	47;"	d
ZONE_DMA	include/linux/mmzone.h	/^	ZONE_DMA,$/;"	e	enum:zone_type
ZONE_DMA32	include/linux/mmzone.h	/^	ZONE_DMA32,$/;"	e	enum:zone_type
ZONE_HIGHMEM	include/linux/mmzone.h	/^	ZONE_HIGHMEM,$/;"	e	enum:zone_type
ZONE_MOVABLE	include/linux/mmzone.h	/^	ZONE_MOVABLE,$/;"	e	enum:zone_type
ZONE_NORMAL	include/linux/mmzone.h	/^	ZONE_NORMAL,$/;"	e	enum:zone_type
_AC	include/linux/const.h	5;"	d
_ARCH_H_	include/asm/arch.h	2;"	d
_AT	include/linux/const.h	6;"	d
_ATOMIC_H_	include/linux/atomic.h	2;"	d
_ATOMIC_LONG_H_	include/linux/atomic-long.h	2;"	d
_BITMAP_H_	include/linux/bitmap.h	2;"	d
_BITOPS_H_	include/linux/bitops.h	2;"	d
_BOOTMEM_H_	include/linux/bootmem.h	2;"	d
_BOOT_ARCH_H_	include/linux/boot_arch.h	2;"	d
_BOUNDS_H_	include/linux/bounds.h	2;"	d
_CACHE_H_	include/asm/cache.h	2;"	d
_CGROUP_H_	include/linux/cgroup.h	2;"	d
_CONFIG_H_	include/linux/config.h	2;"	d
_CONST_H_	include/linux/const.h	2;"	d
_CPUTYPE_H_	include/linux/cputype.h	2;"	d
_CPU_H_	include/linux/cpu.h	2;"	d
_DEBUG_H_	include/linux/debug.h	2;"	d
_DEBUG_LOCKS_H_	include/linux/debug_locks.h	2;"	d
_DMA_H_	include/asm/dma.h	2;"	d
_DOMAIN_H_	include/linux/domain.h	2;"	d
_ERROR_H_	include/linux/error.h	2;"	d
_FIXMAP_H_	include/linux/fixmap.h	2;"	d
_FTREE_EVENT_H_	include/linux/ftree_event.h	2;"	d
_GFP_H_	include/linux/gfp.h	2;"	d
_HASH_H_	include/linux/hash.h	2;"	d
_HIGHMEM_H_	include/linux/highmem.h	2;"	d
_INIT_MM_H_	include/linux/init_mm.h	2;"	d
_INIT_TASK_H_	include/linux/init_task.h	2;"	d
_INTERNAL_H_	include/linux/internal.h	2;"	d
_IOPORT_H_	include/linux/ioport.h	2;"	d
_IO_H_	include/asm/io.h	2;"	d
_IO_H_	include/linux/io.h	2;"	d
_KERNEL_H_	include/linux/kernel.h	2;"	d
_KMEMCHECK_H_	include/linux/kmemcheck.h	2;"	d
_LIST_H_	include/linux/list.h	2;"	d
_L_PTE_DEFAULT	include/linux/pgtable.h	63;"	d
_MAP_H_	include/linux/map.h	2;"	d
_MEMBLOCK_H_	include/linux/memblock.h	2;"	d
_MEMCONTROL_H_	include/linux/memcontrol.h	2;"	d
_MEMORY_HOTPLUG_H_	include/linux/memory_hotplug.h	2;"	d
_MEMORY_H_	include/linux/memory.h	2;"	d
_MMAN_H_	include/linux/mman.h	2;"	d
_MMU_H_	include/linux/mmu.h	2;"	d
_MMZONE_H_	include/linux/mmzone.h	2;"	d
_MM_H_	include/linux/mm.h	2;"	d
_MM_TYPE_H_	include/linux/mm_type.h	2;"	d
_NODEMASK_H_	include/linux/nodemask.h	2;"	d
_NOMMU_H_	include/linux/nommu.h	2;"	d
_NUMA_H_	include/linux/numa.h	2;"	d
_PAGEBLOCK_FLAGS_H_	include/linux/pageblock-flags.h	2;"	d
_PAGE_BIT_ACCESSED	include/linux/pgtable_types.h	12;"	d
_PAGE_BIT_CPA_TEST	include/linux/pgtable_types.h	22;"	d
_PAGE_BIT_DIRTY	include/linux/pgtable_types.h	13;"	d
_PAGE_BIT_GLOBAL	include/linux/pgtable_types.h	16;"	d
_PAGE_BIT_HIDDEN	include/linux/pgtable_types.h	19;"	d
_PAGE_BIT_IOMAP	include/linux/pgtable_types.h	18;"	d
_PAGE_BIT_NX	include/linux/pgtable_types.h	25;"	d
_PAGE_BIT_PAT	include/linux/pgtable_types.h	15;"	d
_PAGE_BIT_PAT_LARGE	include/linux/pgtable_types.h	20;"	d
_PAGE_BIT_PCD	include/linux/pgtable_types.h	11;"	d
_PAGE_BIT_PRESENT	include/linux/pgtable_types.h	7;"	d
_PAGE_BIT_PSE	include/linux/pgtable_types.h	14;"	d
_PAGE_BIT_PWT	include/linux/pgtable_types.h	10;"	d
_PAGE_BIT_RW	include/linux/pgtable_types.h	8;"	d
_PAGE_BIT_SPECIAL	include/linux/pgtable_types.h	21;"	d
_PAGE_BIT_SPLITTING	include/linux/pgtable_types.h	23;"	d
_PAGE_BIT_UNUSED1	include/linux/pgtable_types.h	17;"	d
_PAGE_BIT_USER	include/linux/pgtable_types.h	9;"	d
_PAGE_CGROUP_H_	include/linux/page_cgroup.h	2;"	d
_PAGE_DEBUG_FLAGS_H_	include/linux/page-debug-flags.h	2;"	d
_PAGE_FLAGS_H_	include/linux/page-flags.h	2;"	d
_PAGE_HIDDEN	include/linux/pgtable_types.h	35;"	d
_PAGE_H_	include/linux/page.h	2;"	d
_PERCPU_H_	include/linux/percpu.h	2;"	d
_PFN_H_	include/linux/pfn.h	2;"	d
_PGALLOC_H_	include/linux/pgalloc.h	2;"	d
_PGTABLE_HWDEF_H_	include/linux/pgtable-hwdef.h	2;"	d
_PGTABLE_H_	include/linux/pgtable.h	2;"	d
_PGTABLE_TYPES_H_	include/linux/pgtable_types.h	2;"	d
_POISON_N_	include/linux/poison.h	2;"	d
_PREFETCH_H_	include/linux/prefetch.h	2;"	d
_RESOURCE_H_	include/linux/resource.h	2;"	d
_SCHED_H_	include/linux/sched.h	2;"	d
_SECTIONS_H_	include/asm/sections.h	2;"	d
_SETUP_H_	include/linux/setup.h	2;"	d
_SMP_PLAT_H_	include/asm/smp_plat.h	2;"	d
_SYSTEM_H_	include/asm/system.h	2;"	d
_TRAPS_H_	include/linux/traps.h	2;"	d
_TYPES_H_	include/linux/types.h	2;"	d
_VMSCAN_H_	include/linux/vmscan.h	2;"	d
_VMSTAT_H_	include/linux/vmstat.h	2;"	d
__AC	include/linux/const.h	4;"	d
__B_show	lib/debug.c	/^void __B_show(unsigned long *bitmap,char *s)$/;"	f
__ClearPageHead	lib/mm/page_alloc.c	85;"	d	file:
__ClearPageMlocked	include/linux/page-flags.h	/^static inline void __ClearPageMlocked(struct page *page)$/;"	f
__ClearPageTail	include/linux/page-flags.h	/^static inline void __ClearPageTail(struct page *page)$/;"	f
__GFP_DMA	include/linux/gfp.h	42;"	d
__GFP_DMA32	include/linux/gfp.h	44;"	d
__GFP_FS	include/linux/gfp.h	36;"	d
__GFP_HARDWALL	include/linux/gfp.h	38;"	d
__GFP_HIGH	include/linux/gfp.h	34;"	d
__GFP_HIGHMEM	include/linux/gfp.h	39;"	d
__GFP_HIGHMEM	include/linux/gfp.h	43;"	d
__GFP_IO	include/linux/gfp.h	35;"	d
__GFP_MOVABLE	include/linux/gfp.h	40;"	d
__GFP_MOVABLE	include/linux/gfp.h	45;"	d
__GFP_THISNODE	include/linux/gfp.h	37;"	d
__GFP_WAIT	include/linux/gfp.h	33;"	d
__MAX_NR_ZONES	include/linux/mmzone.h	/^	__MAX_NR_ZONES$/;"	e	enum:zone_type
__NR_PAGEFLAGS	include/linux/page-flags.h	/^	__NR_PAGEFLAGS,$/;"	e	enum:pageflags
__P000	lib/mm/mmap.c	13;"	d	file:
__P001	lib/mm/mmap.c	14;"	d	file:
__P010	lib/mm/mmap.c	15;"	d	file:
__P011	lib/mm/mmap.c	16;"	d	file:
__P100	lib/mm/mmap.c	17;"	d	file:
__P101	lib/mm/mmap.c	18;"	d	file:
__P110	lib/mm/mmap.c	19;"	d	file:
__P111	lib/mm/mmap.c	20;"	d	file:
__PAGE_COPY	include/linux/pgtable.h	71;"	d
__PAGE_COPY_EXEC	include/linux/pgtable.h	73;"	d
__PAGE_NONE	include/linux/pgtable.h	68;"	d
__PAGE_READONLY	include/linux/pgtable.h	74;"	d
__PAGE_READONLY_EXEC	include/linux/pgtable.h	76;"	d
__PAGE_SHARED	include/linux/pgtable.h	69;"	d
__PAGE_SHARED_EXEC	include/linux/pgtable.h	70;"	d
__PG_COMPOUND_LOCK	include/linux/page-flags.h	94;"	d
__PG_COMPOUND_LOCK	include/linux/page-flags.h	96;"	d
__PG_HWPOISON	include/linux/page-flags.h	99;"	d
__PG_MLOCKED	include/linux/page-flags.h	88;"	d
__PG_MLOCKED	include/linux/page-flags.h	90;"	d
__R_show	lib/debug.c	/^void __R_show(struct memblock_type *type,char *type_name,char *s)$/;"	f
__S000	lib/mm/mmap.c	22;"	d	file:
__S001	lib/mm/mmap.c	23;"	d	file:
__S010	lib/mm/mmap.c	24;"	d	file:
__S011	lib/mm/mmap.c	25;"	d	file:
__S100	lib/mm/mmap.c	26;"	d	file:
__S101	lib/mm/mmap.c	27;"	d	file:
__S110	lib/mm/mmap.c	28;"	d	file:
__S111	lib/mm/mmap.c	29;"	d	file:
__TestClearPageMlocked	include/linux/page-flags.h	/^static inline int __TestClearPageMlocked(struct page *page)$/;"	f
___GFP_COLD	include/linux/gfp.h	16;"	d
___GFP_COMP	include/linux/gfp.h	21;"	d
___GFP_DMA	include/linux/gfp.h	8;"	d
___GFP_DMA32	include/linux/gfp.h	10;"	d
___GFP_FS	include/linux/gfp.h	15;"	d
___GFP_HARDWALL	include/linux/gfp.h	24;"	d
___GFP_HIGH	include/linux/gfp.h	13;"	d
___GFP_HIGHMEM	include/linux/gfp.h	9;"	d
___GFP_IO	include/linux/gfp.h	14;"	d
___GFP_MOVABLE	include/linux/gfp.h	11;"	d
___GFP_NOFAIL	include/linux/gfp.h	19;"	d
___GFP_NOMEMALLOC	include/linux/gfp.h	23;"	d
___GFP_NORETRY	include/linux/gfp.h	20;"	d
___GFP_NOTRACK	include/linux/gfp.h	27;"	d
___GFP_NOWARN	include/linux/gfp.h	17;"	d
___GFP_NO_KSWAPED	include/linux/gfp.h	28;"	d
___GFP_RECLAIMABLE	include/linux/gfp.h	26;"	d
___GFP_REPEAT	include/linux/gfp.h	18;"	d
___GFP_THISNODE	include/linux/gfp.h	25;"	d
___GFP_WAIT	include/linux/gfp.h	12;"	d
___GFP_ZERO	include/linux/gfp.h	22;"	d
___alloc_bootmem	lib/mm/bootmem.c	/^static void * __init ___alloc_bootmem(unsigned long size,unsigned long align,$/;"	f	file:
___alloc_bootmem_node	lib/mm/bootmem.c	/^static void * __init ___alloc_bootmem_node(struct bootmem_data *bdata,$/;"	f	file:
___alloc_bootmem_nopanic	lib/mm/bootmem.c	/^static void * __init ___alloc_bootmem_nopanic(unsigned long size,$/;"	f	file:
__alloc_bootmem_low	lib/mm/bootmem.c	/^void * __init __alloc_bootmem_low(unsigned long size,unsigned long align,$/;"	f
__alloc_bootmem_node	lib/mm/bootmem.c	/^void * __init __alloc_bootmem_node(struct pglist_data *pgdat,$/;"	f
__alloc_bootmem_node_nopanic	lib/mm/bootmem.c	/^void * __init __alloc_bootmem_node_nopanic(struct pglist_data *pgdat,$/;"	f
__alloc_bootmem_nopanic	lib/mm/bootmem.c	/^void * __init __alloc_bootmem_nopanic(unsigned long size,unsigned long align,$/;"	f
__build_all_zonelist	lib/mm/page_alloc.c	/^static __init_refok int __build_all_zonelist(void *data)$/;"	f	file:
__dec_zone_page_state	lib/mm/vmstat.c	/^void __dec_zone_page_state(struct page *page,enum zone_stat_item item)$/;"	f
__dec_zone_state	include/linux/vmstat.h	/^static inline void __dec_zone_state(struct zone *zone,enum zone_stat_item item)$/;"	f
__find_buddy_index	lib/mm/page_alloc.c	/^static inline unsigned long __find_buddy_index(unsigned long page_idx,$/;"	f	file:
__free	lib/mm/bootmem.c	/^static void __init __free(struct bootmem_data *bdata,$/;"	f	file:
__free_one_page	lib/mm/page_alloc.c	/^static inline void __free_one_page(struct page *page,$/;"	f	file:
__free_page	include/linux/gfp.h	137;"	d
__free_pages	lib/mm/page_alloc.c	/^void __free_pages(struct page *page,unsigned long order)$/;"	f
__free_pages_bootmem	lib/mm/page_alloc.c	/^void __meminit __free_pages_bootmem(struct page *page,unsigned int order)$/;"	f
__free_pages_ok	lib/mm/page_alloc.c	/^static void __free_pages_ok(struct page *page,unsigned int order)$/;"	f	file:
__init	include/linux/kernel.h	7;"	d
__init_memblock	include/linux/kernel.h	8;"	d
__init_page_cgroup	lib/mm/page_cgroup.c	/^static void __meminit __init_page_cgroup(struct page_cgroup *pc,$/;"	f	file:
__init_refok	include/linux/kernel.h	13;"	d
__initdata	include/linux/kernel.h	9;"	d
__initdata	lib/mm/mmu.c	/^static struct cachepolicy cache_policies[] __initdata = {$/;"	v	typeref:struct:cache_policies	file:
__initdata	lib/mm/mmu.c	/^static unsigned int cachepolicy __initdata = CPOLICY_WRITEBACK;$/;"	v	file:
__initdata	lib/mm/mmu.c	/^static unsigned int ecc_mask __initdata = 0;$/;"	v	file:
__list_add	include/linux/list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_del	include/linux/list.h	/^static inline void __list_del(struct list_head *prev,struct list_head *next)$/;"	f
__list_del_entry	include/linux/list.h	/^static inline void __list_del_entry(struct list_head *entry)$/;"	f
__list_for_each	include/linux/list.h	145;"	d
__memblock_alloc_base	lib/mm/memblock.c	/^phys_addr_t __init __memblock_alloc_base(phys_addr_t size,phys_addr_t align,$/;"	f
__meminit	include/linux/kernel.h	11;"	d
__meminitdata	include/linux/kernel.h	10;"	d
__mod_zone_page_state	include/linux/vmstat.h	/^static inline void __mod_zone_page_state(struct zone *zone,$/;"	f
__pa	include/linux/page.h	41;"	d
__paginginit	include/linux/kernel.h	12;"	d
__per_cpu	include/linux/mmzone.h	174;"	d
__percpu	include/linux/kernel.h	14;"	d
__pfn_to_phys	include/linux/page.h	43;"	d
__pgprot	include/linux/page.h	19;"	d
__pmd	include/linux/pgtable.h	99;"	d
__pmd_populate	include/linux/pgalloc.h	/^static inline __pmd_populate(pmd_t *__pmd,phys_addr_t pte,$/;"	f
__pte	include/linux/page.h	18;"	d
__request_resource	lib/kernel/resource.c	/^static struct resource * __request_resource(struct resource *root,$/;"	f	file:
__reserve	lib/mm/bootmem.c	/^static int __init __reserve(struct bootmem_data *bdata,unsigned long sidx,$/;"	f	file:
__va	include/linux/page.h	42;"	d
_alloc_bootmem_nopanic	lib/mm/bootmem.c	/^void * __init _alloc_bootmem_nopanic(unsigned long size,unsigned long align,$/;"	f
_count	include/linux/mm_type.h	/^	atomic_t _count;     \/* Usage count *\/$/;"	m	struct:page
_mapcount	include/linux/mm_type.h	/^		atomic_t _mapcount; \/* Count of ptes mapped in mms,$/;"	m	union:page::__anon5
_zonerefs	include/linux/mmzone.h	/^	struct zoneref _zonerefs[MAX_ZONES_PER_ZONELIST + 1];$/;"	m	struct:zonelist	typeref:struct:zonelist::zoneref
active	include/linux/cgroup.h	/^	int active;$/;"	m	struct:cgroup_subsys
align_idx	lib/mm/bootmem.c	/^static unsigned long __init align_idx(struct bootmem_data *bdata,$/;"	f	file:
align_off	lib/mm/bootmem.c	/^static unsigned long __init align_off(struct bootmem_data *bdata,$/;"	f	file:
all_unreclaimable	include/linux/mmzone.h	/^	int all_unreclaimable;         \/* All pages pinned *\/$/;"	m	struct:zone
alloc_arch_preferred_bootmem	lib/mm/bootmem.c	/^static void * __init alloc_arch_preferred_bootmem(struct bootmem_data *bdata,$/;"	f	file:
alloc_bootmem_core	lib/mm/bootmem.c	/^static void * __init alloc_bootmem_core(struct bootmem_data *bdata,$/;"	f	file:
alloc_bootmem_low	include/linux/bootmem.h	31;"	d
alloc_bootmem_node	include/linux/bootmem.h	28;"	d
alloc_init_pte	lib/mm/mmu.c	/^void __init alloc_init_pte(pmd_t *pmd,unsigned long addr,$/;"	f
alloc_init_section	lib/mm/mmu.c	/^void alloc_init_section(pgd_t *pgd,unsigned long addr,$/;"	f
alloc_node_mem_map	lib/mm/memblock.c	/^static void alloc_node_mem_map(struct pglist_data *pgdat)$/;"	f	file:
alloc_node_page_cgroup	lib/mm/page_cgroup.c	/^static int __init alloc_node_page_cgroup(int nid)$/;"	f	file:
alloc_remap	lib/mm/memblock.c	/^static inline void *alloc_remap(int nid,unsigned long size)$/;"	f	file:
arch_adjust_zones	include/linux/memory.h	7;"	d
arch_free_page	include/linux/gfp.h	/^static inline void arch_free_page(struct page *page,int order) {}$/;"	f
arg_end	include/linux/mm_type.h	/^	unsigned long arg_start,arg_end,env_start,env_end;$/;"	m	struct:mm_struct
arg_start	include/linux/mm_type.h	/^	unsigned long arg_start,arg_end,env_start,env_end;$/;"	m	struct:mm_struct
arm_bootmem_free	lib/mm/memblock.c	/^void arm_bootmem_free(unsigned long min,unsigned long max_low,$/;"	f
arm_bootmem_init	lib/mm/memblock.c	/^void arm_bootmem_init(unsigned int start_pfn,$/;"	f
arm_memblock_init	lib/mm/init.c	/^void __init arm_memblock_init(struct meminfo *mi)$/;"	f
arm_mm_memblock_reserve	lib/mm/mmu.c	/^void arm_mm_memblock_reserve(void)$/;"	f
atomic_add	include/linux/atomic.h	25;"	d
atomic_add_return	include/linux/atomic.h	/^static inline int atomic_add_return(int i,atomic_t *v)$/;"	f
atomic_dec	include/linux/atomic.h	29;"	d
atomic_inc	include/linux/atomic.h	28;"	d
atomic_long_add	include/linux/atomic-long.h	/^static inline void atomic_long_add(long i,atomic_long_t *l)$/;"	f
atomic_long_dec	include/linux/atomic-long.h	/^static inline void atomic_long_dec(atomic_long_t *l)$/;"	f
atomic_long_inc	include/linux/atomic-long.h	/^static inline void atomic_long_inc(atomic_long_t *l)$/;"	f
atomic_long_set	include/linux/atomic-long.h	/^static inline void atomic_long_set(atomic_long_t *l,long i)$/;"	f
atomic_long_t	include/linux/types.h	/^typedef atomic_t atomic_long_t;$/;"	t
atomic_read	include/linux/atomic.h	5;"	d
atomic_set	include/linux/atomic.h	6;"	d
atomic_sub	include/linux/atomic.h	26;"	d
atomic_sub_return	include/linux/atomic.h	/^static inline int atomic_sub_return(int i,atomic_t *v)$/;"	f
atomic_t	include/linux/types.h	/^} atomic_t;$/;"	t	typeref:struct:__anon12
bad_page	lib/mm/page_alloc.c	/^static void bad_page(struct page *page)$/;"	f	file:
bad_range	lib/mm/page_alloc.c	/^static int bad_range(struct zone *zone,struct page *page)$/;"	f	file:
bank	include/linux/setup.h	/^	struct membank bank[NR_BANKS];$/;"	m	struct:meminfo	typeref:struct:meminfo::membank
bank_pfn_end	include/linux/setup.h	31;"	d
bank_pfn_size	include/linux/setup.h	32;"	d
bank_pfn_start	include/linux/setup.h	30;"	d
bank_phys_end	include/linux/setup.h	34;"	d
bank_phys_size	include/linux/setup.h	35;"	d
bank_phys_start	include/linux/setup.h	33;"	d
base	include/linux/memblock.h	/^	unsigned long base;$/;"	m	struct:memblock_region
batch	include/linux/mmzone.h	/^	int batch;    \/* chunk size for buddy add\/remove *\/$/;"	m	struct:per_cpu_page
batch	include/linux/mmzone.h	/^	int batch;    \/* chunk size for buddy add\/remove *\/$/;"	m	struct:per_cpu_pages
bdata	include/linux/mmzone.h	/^	struct bootmem_data *bdata;$/;"	m	struct:pglist_data	typeref:struct:pglist_data::bootmem_data
bdata_list	lib/mm/bootmem.c	/^struct list_head bdata_list = LIST_HEAD_INIT(bdata_list);$/;"	v	typeref:struct:list_head
bdebug	include/linux/debug.h	15;"	d
bool	include/linux/kernel.h	18;"	d
boot_init_meminfo	lib/boot_arch.c	/^static void boot_init_meminfo(void)$/;"	f	file:
boot_params	include/asm/arch.h	/^	unsigned long boot_params; \/* tagged list *\/$/;"	m	struct:machine_desc
bootmap_bytes	lib/mm/memblock.c	/^static unsigned long bootmap_bytes(unsigned long pages)$/;"	f	file:
bootmem_arch_preferred_node	lib/mm/bootmem.c	22;"	d	file:
bootmem_bootmap_pages	lib/mm/memblock.c	/^unsigned long bootmem_bootmap_pages(unsigned long start_pfn,$/;"	f
bootmem_data	include/linux/bootmem.h	/^typedef struct bootmem_data {$/;"	s
bootmem_data_t	include/linux/bootmem.h	/^} bootmem_data_t;$/;"	t	typeref:struct:bootmem_data
bootmem_init	lib/mm/init.c	/^void __init bootmem_init(void)$/;"	f
bootmem_node_data	lib/mm/bootmem.c	/^struct bootmem_data bootmem_node_data[MAX_NUMNODES];$/;"	v	typeref:struct:bootmem_data
brk	include/linux/mm_type.h	/^	unsigned long start_brk,brk,start_stack;$/;"	m	struct:mm_struct
buddy_machine	lib/kernel/setup.c	/^struct machine_desc buddy_machine = {$/;"	v	typeref:struct:machine_desc
build_all_zonelist	lib/mm/page_alloc.c	/^void build_all_zonelist(void *data)$/;"	f
build_mem_type_table	lib/mm/mmu.c	/^static void __init build_mem_type_table(void)$/;"	f	file:
build_zonelist_cache	lib/mm/page_alloc.c	/^static void build_zonelist_cache(struct pglist_data *pgdat)$/;"	f	file:
build_zonelists	lib/mm/page_alloc.c	/^static void build_zonelists(struct pglist_data *pgdat)$/;"	f	file:
build_zonelists_node	lib/mm/page_alloc.c	/^static int build_zonelists_node(struct pglist_data *pgdat,$/;"	f	file:
cachepolicy	lib/mm/mmu.c	/^struct cachepolicy {$/;"	s	file:
calculate_node_totalpages	lib/mm/memblock.c	/^static void calculate_node_totalpages(struct pglist_data *pgdat,$/;"	f	file:
cgroup_subsys	include/linux/cgroup.h	/^struct cgroup_subsys {$/;"	s
check_highest_zone	lib/mm/page_alloc.c	/^static inline void check_highest_zone(int k)$/;"	f	file:
check_poison_mem	lib/mm/debug-pagealloc.c	/^static void check_poison_mem(unsigned char *mem,size_t bytes)$/;"	f	file:
child	include/linux/ioport.h	/^	struct resource *parent,*sibling,*child;$/;"	m	struct:resource	typeref:struct:resource::
clear_bit	lib/bitmap.c	/^void clear_bit(int nr,unsigned int *byte)$/;"	f
clear_page_poison	lib/mm/debug-pagealloc.c	/^static inline clear_page_poison(struct page *page)$/;"	f	file:
cnt	include/linux/memblock.h	/^	unsigned long cnt;$/;"	m	struct:memblock_type
container_of	include/linux/kernel.h	45;"	d
contig_pglist_data	lib/mm/page_alloc.c	/^struct pglist_data contig_pglist_data = {$/;"	v	typeref:struct:pglist_data
count	include/linux/mmzone.h	/^	int count;    \/* number of page in the list *\/$/;"	m	struct:per_cpu_page
count	include/linux/mmzone.h	/^	int count;    \/* number of pages in the list *\/$/;"	m	struct:per_cpu_pages
counter	include/linux/types.h	/^	int counter;$/;"	m	struct:__anon12
cpu_architecture	lib/kernel/setup.c	/^int cpu_architecture(void)$/;"	f
cpu_is_xsc3	include/linux/cputype.h	5;"	d
cpu_is_xscale	include/linux/cputype.h	6;"	d
cpuset_init_current_mems_allowed	lib/mm/page_alloc.c	/^static inline void cpuset_init_current_mems_allowed(void) {}$/;"	f	file:
cpuset_init_mems_allowed	lib/mm/page_alloc.c	/^static inline void cpuset_init_mems_allowed(void) {}$/;"	f	file:
cr_mask	lib/mm/mmu.c	/^	unsigned int cr_mask;$/;"	m	struct:cachepolicy	file:
create_mapping	lib/mm/mmu.c	/^void create_mapping(struct map_desc *md)$/;"	f
current_limit	include/linux/memblock.h	/^	unsigned long current_limit;$/;"	m	struct:memblock
current_zonelist_order	lib/mm/page_alloc.c	/^static int current_zonelist_order = ZONELIST_ORDER_DEFAULT;$/;"	v	file:
debug_check_no_locks_freed	include/linux/debug_locks.h	/^static inline void debug_check_no_locks_freed(const void *from,$/;"	f
debug_check_no_obj_freed	include/linux/debug_locks.h	/^static inline void debug_check_no_obj_freed(const void *address,$/;"	f
debug_flags	include/linux/mm_type.h	/^	unsigned long debug_flags;   \/* Use atomic bitops on this *\/$/;"	m	struct:page
debug_pagealloc_enabled	init/main.c	/^int debug_pagealloc_enabled = 0;$/;"	v
def_flags	include/linux/mm_type.h	/^	unsigned long stack_vm,reserved_vm,def_flags,nr_ptes;$/;"	m	struct:mm_struct
default_memory	lib/mm/memblock.c	/^struct memblock_region default_memory[INIT_MEMBLOCK_REGIONS + 1];$/;"	v	typeref:struct:memblock_region
default_reserved	lib/mm/memblock.c	/^struct memblock_region default_reserved[INIT_MEMBLOCK_REGIONS + 1];$/;"	v	typeref:struct:memblock_region
destroy_compound_page	lib/mm/page_alloc.c	/^static int destroy_compound_page(struct page *page,unsigned long order)$/;"	f	file:
devicemaps_init	lib/mm/mmu.c	/^static void __init devicemaps_init(void)$/;"	f	file:
disabled	include/linux/cgroup.h	/^	int disabled;$/;"	m	struct:cgroup_subsys
dma_reserve	lib/mm/page_alloc.c	/^static unsigned long __meminitdata dma_reserve;$/;"	v	file:
dump_page	lib/mm/page_alloc.c	/^void dump_page(struct page *page)$/;"	f
dump_page_flags	lib/mm/page_alloc.c	/^static void dump_page_flags(unsigned long flags)$/;"	f	file:
dump_stack	lib/mm/traps.c	/^void dump_stack(void)$/;"	f
early_alloc	lib/mm/mmu.c	/^void *early_alloc(unsigned long size)$/;"	f
early_parment	lib/mm/init.c	/^void early_parment(void)$/;"	f
early_pfn_in_nid	include/linux/mmzone.h	320;"	d
early_pfn_valid	include/linux/mmzone.h	319;"	d
early_pte_alloc	lib/mm/mmu.c	/^static pte_t * __init early_pte_alloc(pmd_t *pmd,unsigned long addr,$/;"	f	file:
early_vmalloc	lib/mm/mmu.c	/^void early_vmalloc(void)$/;"	f
empty_zero_page	lib/mm/mmu.c	/^struct page *empty_zero_page;$/;"	v	typeref:struct:page
end	include/linux/ioport.h	/^	resource_size_t end;$/;"	m	struct:resource
end_code	include/linux/mm_type.h	/^	unsigned long start_code,end_code,start_data,end_data;$/;"	m	struct:mm_struct
end_data	include/linux/mm_type.h	/^	unsigned long start_code,end_code,start_data,end_data;$/;"	m	struct:mm_struct
env_end	include/linux/mm_type.h	/^	unsigned long arg_start,arg_end,env_start,env_end;$/;"	m	struct:mm_struct
env_start	include/linux/mm_type.h	/^	unsigned long arg_start,arg_end,env_start,env_end;$/;"	m	struct:mm_struct
exec_vm	include/linux/mm_type.h	/^	unsigned long total_vm,locked_vm,shared_vm,exec_vm;$/;"	m	struct:mm_struct
false	include/linux/kernel.h	17;"	d
find_first_bit	include/linux/bitops.h	16;"	d
find_limits	lib/mm/init.c	/^void __init find_limits(unsigned int *min,unsigned int *max_low,$/;"	f
find_next_bit	lib/bitmap.c	/^int find_next_bit(unsigned int *addr,unsigned long size,$/;"	f
find_next_zero_bit	lib/bitmap.c	/^int find_next_zero_bit(unsigned int *byte,$/;"	f
first_page	include/linux/mm_type.h	/^		struct page *first_page;  \/* Compound tail pages *\/$/;"	m	union:page::__anon7	typeref:struct:page::__anon7::page
first_zones_zonelist	include/linux/nodemask.h	/^static inline struct zoneref *first_zones_zonelist(struct zonelist *zonelist,$/;"	f
flags	include/linux/ioport.h	/^	unsigned long flags;$/;"	m	struct:resource
flags	include/linux/mm_type.h	/^	unsigned long flags; \/* Atomic flags,some possibly $/;"	m	struct:page
flags	include/linux/mmzone.h	/^	unsigned long flags;$/;"	m	struct:zone
flags	include/linux/page_cgroup.h	/^	unsigned long flags;$/;"	m	struct:page_cgroup
flush_cache_all	lib/mm/tlb.c	/^void flush_cache_all()$/;"	f
for_each_bank	include/linux/setup.h	27;"	d
for_each_lru	include/linux/mmzone.h	81;"	d
for_each_memblock	include/linux/memblock.h	29;"	d
for_each_migratetype_order	include/linux/mmzone.h	315;"	d
for_each_node_state	include/linux/nodemask.h	28;"	d
for_each_online_node	include/linux/nodemask.h	42;"	d
for_each_set_bit	include/linux/bitops.h	18;"	d
for_each_zone_zonelist	include/linux/mmzone.h	291;"	d
for_each_zone_zonelist_nodemask	include/linux/nodemask.h	51;"	d
free_all_bootmem	lib/mm/bootmem.c	/^unsigned long __init free_all_bootmem(void)$/;"	f
free_all_bootmem_core	lib/mm/bootmem.c	/^static unsigned long __init free_all_bootmem_core(struct bootmem_data *bdata)$/;"	f	file:
free_area	include/linux/mmzone.h	/^	struct free_area free_area[MAX_ORDER];$/;"	m	struct:zone	typeref:struct:zone::free_area
free_area	include/linux/mmzone.h	/^struct free_area {$/;"	s
free_area	lib/mm/init.c	/^static inline int free_area(unsigned long pfn,unsigned long end,char *s)$/;"	f	file:
free_area_init_core	lib/mm/page_alloc.c	/^void __paginginit free_area_init_core(struct pglist_data *pgdat,$/;"	f
free_area_init_node	lib/mm/memblock.c	/^static void free_area_init_node(int nid,unsigned long *zone_sizes,$/;"	f	file:
free_bootmem	lib/mm/bootmem.c	/^void __init free_bootmem(unsigned long addr,unsigned long size)$/;"	f
free_highpages	lib/mm/init.c	/^static void __init free_highpages(void)$/;"	f	file:
free_hot_cold_page	lib/mm/page_alloc.c	/^void free_hot_cold_page(struct page *page,int cold)$/;"	f
free_list	include/linux/mmzone.h	/^	struct list_head free_list[MIGRATE_TYPES];$/;"	m	struct:free_area	typeref:struct:free_area::list_head
free_memmap	lib/mm/init.c	/^static inline void free_memmap(unsigned long start_pfn,unsigned long end_pfn)$/;"	f	file:
free_one_page	lib/mm/page_alloc.c	/^static void free_one_page(struct zone *zone,struct page *page,int order,$/;"	f	file:
free_page_mlock	lib/mm/page_alloc.c	/^static inline void free_page_mlock(struct page *page)$/;"	f	file:
free_pages_check	lib/mm/page_alloc.c	/^static inline int free_pages_check(struct page *page)$/;"	f	file:
free_pages_prepare	lib/mm/page_alloc.c	/^static bool free_pages_prepare(struct page *page,unsigned int order)$/;"	f	file:
free_pcppages_bulk	lib/mm/page_alloc.c	/^static void free_pcppages_bulk(struct zone *zone,int count,$/;"	f	file:
free_unused_memmap	lib/mm/init.c	/^static void __init free_unused_memmap(struct meminfo *mi)$/;"	f	file:
freelist	include/linux/mm_type.h	/^		void *freelist;   \/* SLUB:freelist req.slab lock *\/$/;"	m	union:page::__anon9
get_cr	include/asm/system.h	/^static inline unsigned int get_cr(void)$/;"	f
get_pageblock_bitmap	lib/mm/page_alloc.c	/^static inline unsigned long *get_pageblock_bitmap(struct zone *zone,$/;"	f	file:
get_pageblock_flags_group	lib/mm/page_alloc.c	/^unsigned long get_pageblock_flags_group(struct page *page,$/;"	f
get_pageblock_migratetype	include/linux/mmzone.h	/^static inline unsigned long get_pageblock_migratetype(struct page *page)$/;"	f
gfp_t	include/linux/types.h	/^typedef unsigned int gfp_t;$/;"	t
gfp_zone	include/linux/gfp.h	/^static inline enum zone_type gfp_zone(gfp_t flags)$/;"	f
gfp_zonelist	include/linux/gfp.h	/^static inline int gfp_zonelist(gfp_t flags)$/;"	f
hash_32	include/linux/hash.h	/^static inline u32 hash_32(u32 val,unsigned int bits)$/;"	f
hash_64	include/linux/hash.h	/^static inline u64 hash_64(u64 val,unsigned int bits)$/;"	f
hash_long	include/linux/hash.h	11;"	d
hash_long	include/linux/hash.h	13;"	d
hash_ptr	include/linux/hash.h	/^static inline unsigned long hash_ptr(void *ptr,unsigned int bits)$/;"	f
high	include/linux/mmzone.h	/^	int high;     \/* high watermark,emptying needed *\/$/;"	m	struct:per_cpu_page
high	include/linux/mmzone.h	/^	int high;     \/* high watermark,emptying needed *\/$/;"	m	struct:per_cpu_pages
high_memory	lib/mm/memory.c	/^void *high_memory;$/;"	v
high_to_low	lib/debug.c	/^unsigned int high_to_low(unsigned int old)$/;"	f
high_wmark_pages	include/linux/mmzone.h	304;"	d
highest_memmap_pfn	lib/mm/nommu.c	/^unsigned long highest_memmap_pfn;$/;"	v
highmem	include/linux/setup.h	/^	unsigned int highmem;$/;"	m	struct:membank
hint_idx	include/linux/bootmem.h	/^	unsigned long hint_idx;$/;"	m	struct:bootmem_data
hotcpu_notifier	include/linux/cpu.h	4;"	d
index	include/linux/mm_type.h	/^		pgoff_t index;    \/* Our offset within mapping *\/$/;"	m	union:page::__anon9
init_bootmem_core	lib/mm/memblock.c	/^static unsigned long __init init_bootmem_core(struct bootmem_data *bdata,$/;"	f	file:
init_bootmem_node	lib/mm/memblock.c	/^static long __init init_bootmem_node(struct pglist_data *pgdat,$/;"	f	file:
init_currently_empty_zone	lib/mm/page_alloc.c	/^__meminit int init_currently_empty_zone(struct zone *zone,$/;"	f
init_mm	lib/mm/init-mm.c	/^struct mm_struct init_mm = {$/;"	v	typeref:struct:mm_struct
init_task	lib/kernel/init_task.c	/^struct task_struct init_task = {$/;"	v	typeref:struct:task_struct
init_waitqueue_head	lib/mm/page_alloc.c	/^static inline void init_waitqueue_head(struct pglist_data *pgdat) {}$/;"	f	file:
inuse	include/linux/mm_type.h	/^			u16 inuse;$/;"	m	struct:page::__anon5::__anon6
io_res	lib/kernel/setup.c	/^static struct resource io_res[] = {$/;"	v	typeref:struct:resource	file:
iomem_resource	lib/kernel/resource.c	/^struct resource iomem_resource = {$/;"	v	typeref:struct:resource
ioport_resource	lib/kernel/resource.c	/^struct resource ioport_resource = {$/;"	v	typeref:struct:resource
is_highmem	include/linux/mmzone.h	/^static inline int is_highmem(struct zone *zone)$/;"	f
is_highmem_idx	include/linux/mmzone.h	/^static inline int is_highmem_idx(enum zone_type idx)$/;"	f
is_normal_idx	include/linux/mmzone.h	/^static inline int is_normal_idx(enum zone_type idx)$/;"	f
is_smp	include/asm/smp_plat.h	/^static inline bool is_smp(void)$/;"	f
kernel_code	lib/kernel/setup.c	50;"	d	file:
kernel_data	lib/kernel/setup.c	51;"	d	file:
kernel_map_pages	lib/mm/debug-pagealloc.c	/^void kernel_map_pages(struct page *page,int numpages,int enable)$/;"	f
kmap_init	lib/mm/mmu.c	/^static void __init kmap_init(void)$/;"	f	file:
kmemcheck_free_shadow	lib/mm/page_alloc.c	/^static inline void kmemcheck_free_shadow(struct page *p,int order) {}$/;"	f	file:
kmemcheck_page_is_tracked	include/linux/kmemcheck.h	/^static inline bool kmemcheck_page_is_tracked(struct page *p)$/;"	f
kmemcheck_pte_lookup	lib/mm/pte.c	/^pte_t *kmemcheck_pte_lookup(unsigned long address)$/;"	f
kswapd_max_order	include/linux/mmzone.h	/^    int kswapd_max_order;$/;"	m	struct:pglist_data
last_end_off	include/linux/bootmem.h	/^	unsigned long last_end_off;$/;"	m	struct:bootmem_data
last_full_zap	include/linux/mmzone.h	/^	unsigned long last_full_zap; \/* when last zap'd(jiffies )*\/$/;"	m	struct:zonelist_cache
last_scanned_child	lib/mm/memcontrol.c	/^	int last_scanned_child;$/;"	m	struct:mem_cgroup	file:
length	include/linux/map.h	/^	unsigned long length;$/;"	m	struct:map_desc
lh	lib/mm/highmem.c	/^	struct list_head lh;     \/* List of page_address_maps *\/$/;"	m	struct:page_address_slot	typeref:struct:page_address_slot::list_head	file:
likely	include/linux/kernel.h	57;"	d
link_bootmem	lib/mm/memblock.c	/^static void link_bootmem(struct bootmem_data *bdata)$/;"	f	file:
list	include/linux/bootmem.h	/^	struct list_head list;$/;"	m	struct:bootmem_data	typeref:struct:bootmem_data::list_head
list	include/linux/mmzone.h	/^		struct list_head list;$/;"	m	struct:zone::zone_lru	typeref:struct:zone::zone_lru::list_head
list	lib/mm/highmem.c	/^	struct list_head list;$/;"	m	struct:page_address_map	typeref:struct:page_address_map::list_head	file:
list_add	include/linux/list.h	/^static inline void list_add(struct list_head *new,struct list_head *head)$/;"	f
list_add_tail	include/linux/list.h	/^static inline void list_add_tail(struct list_head *new,struct list_head *head)$/;"	f
list_del	include/linux/list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	include/linux/list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_empty	include/linux/list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_entry	include/linux/list.h	129;"	d
list_fist_entry	include/linux/list.h	134;"	d
list_for_each	include/linux/list.h	139;"	d
list_for_each_entry	include/linux/list.h	150;"	d
list_head	include/linux/list.h	/^struct list_head {$/;"	s
list_is_last	include/linux/list.h	/^static inline int list_is_last(const struct list_head *list,$/;"	f
list_move	include/linux/list.h	/^static inline void list_move(struct list_head *list,struct list_head *head)$/;"	f
list_move_tail	include/linux/list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_replace	include/linux/list.h	/^static inline void list_replace(struct list_head *old,$/;"	f
list_replace_init	include/linux/list.h	/^static inline void list_replace_init(struct list_head *old,$/;"	f
lists	include/linux/mmzone.h	/^	struct list_head lists[MIGRATE_PCPTYPES];$/;"	m	struct:per_cpu_page	typeref:struct:per_cpu_page::list_head
lists	include/linux/mmzone.h	/^	struct list_head lists[MIGRATE_PCPTYPES];$/;"	m	struct:per_cpu_pages	typeref:struct:per_cpu_pages::list_head
local_flush_tlb_all	lib/mm/tlb.c	/^void local_flush_tlb_all(void)$/;"	f
locked_vm	include/linux/mm_type.h	/^	unsigned long total_vm,locked_vm,shared_vm,exec_vm;$/;"	m	struct:mm_struct
lookup_machine_type	lib/kernel/setup.c	/^struct machine_desc *lookup_machine_type(unsigned int nr)$/;"	f
lowmem_limit	lib/mm/mmu.c	/^phys_addr_t lowmem_limit = 0;$/;"	v
lp0	lib/kernel/setup.c	74;"	d	file:
lp1	lib/kernel/setup.c	75;"	d	file:
lp2	lib/kernel/setup.c	76;"	d	file:
lru	include/linux/mm_type.h	/^	struct list_head lru;   \/* Pageout list,eg,active_list$/;"	m	struct:page	typeref:struct:page::list_head
lru	include/linux/mmzone.h	/^	} lru[NR_LRU_LISTS];$/;"	m	struct:zone	typeref:struct:zone::zone_lru
lru	include/linux/page_cgroup.h	/^	struct list_head lru; \/* per cgroup LRU list *\/$/;"	m	struct:page_cgroup	typeref:struct:page_cgroup::list_head
lru_list	include/linux/mmzone.h	/^enum lru_list {$/;"	g
machine_arch_type	lib/kernel/setup.c	82;"	d	file:
machine_desc	include/asm/arch.h	/^struct machine_desc {$/;"	s
main	init/main.c	/^int main()$/;"	f
main	init/test.c	/^int main()$/;"	f
map_desc	include/linux/map.h	/^struct map_desc {$/;"	s
map_lowmem	lib/mm/mmu.c	/^void __init map_lowmem(void)$/;"	f
mapping	include/linux/mm_type.h	/^			struct address_space *mapping;$/;"	m	struct:page::__anon7::__anon8	typeref:struct:page::__anon7::__anon8::address_space
mark_bootmem	lib/mm/bootmem.c	/^static int __init mark_bootmem(unsigned long start,unsigned long end,$/;"	f	file:
mark_bootmem_node	lib/mm/bootmem.c	/^static int __init mark_bootmem_node(bootmem_data_t *bdata,$/;"	f	file:
mask	include/linux/ftree_event.h	/^	unsigned long mask;$/;"	m	struct:trace_print_flags
max	include/linux/kernel.h	20;"	d
max	include/linux/memblock.h	/^	unsigned long max;$/;"	m	struct:memblock_type
max_low_pfn	lib/mm/bootmem.c	/^unsigned long max_low_pfn;$/;"	v
max_mapnr	lib/mm/memory.c	/^unsigned long max_mapnr;$/;"	v
max_pfn	lib/mm/bootmem.c	/^unsigned long max_pfn;$/;"	v
mem_addr_t	include/linux/types.h	/^typedef unsigned int mem_addr_t;$/;"	t
mem_cgroup	include/linux/page_cgroup.h	/^	struct mem_cgroup *mem_cgroup;$/;"	m	struct:page_cgroup	typeref:struct:page_cgroup::mem_cgroup
mem_cgroup	lib/mm/memcontrol.c	/^struct mem_cgroup {$/;"	s	file:
mem_cgroup_disabled	include/linux/memcontrol.h	/^static inline bool mem_cgroup_disabled(void)$/;"	f
mem_cgroup_subsys	lib/mm/memcontrol.c	/^struct cgroup_subsys mem_cgroup_subsys = {$/;"	v	typeref:struct:cgroup_subsys
mem_init	lib/mm/init.c	/^void __init mem_init(void)$/;"	f
mem_map	lib/mm/memory.c	/^struct page *mem_map;$/;"	v	typeref:struct:page
mem_res	lib/kernel/setup.c	/^static struct resource mem_res[] = {$/;"	v	typeref:struct:resource	file:
mem_to_phys	lib/boot_arch.c	/^phys_addr_t mem_to_phys(void *ad)$/;"	f
mem_types	lib/mm/mmu.c	/^static struct mem_type mem_types[] = {$/;"	v	typeref:struct:mem_type	file:
membank	include/linux/setup.h	/^struct membank {$/;"	s
memblock	include/linux/memblock.h	/^struct memblock {$/;"	s
memblock	lib/mm/memblock.c	/^struct memblock memblock = {$/;"	v	typeref:struct:memblock
memblock_add	lib/mm/memblock.c	/^long __init_memblock memblock_add(phys_addr_t base,phys_addr_t size)$/;"	f
memblock_add_region	lib/mm/memblock.c	/^static int memblock_add_region(struct memblock_type *type,$/;"	f	file:
memblock_adjacent_addr	lib/mm/memblock.c	/^static long __init_memblock memblock_adjacent_addr(phys_addr_t base1,$/;"	f	file:
memblock_align_down	lib/mm/memblock.c	/^static phys_addr_t memblock_align_down(phys_addr_t addr,$/;"	f	file:
memblock_align_up	lib/mm/memblock.c	/^static phys_addr_t memblock_align_up(phys_addr_t addr,phys_addr_t align)$/;"	f	file:
memblock_alloc	lib/mm/memblock.c	/^phys_addr_t memblock_alloc(phys_addr_t size,phys_addr_t align)$/;"	f
memblock_alloc_base	lib/mm/memblock.c	/^static phys_addr_t memblock_alloc_base(phys_addr_t size,phys_addr_t align,$/;"	f	file:
memblock_analyze	lib/mm/memblock.c	/^void __init memblock_analyze(void)$/;"	f
memblock_coalesce_regions	lib/mm/memblock.c	/^static void memblock_coalesce_regions(struct memblock_type *type,$/;"	f	file:
memblock_dump	lib/mm/memblock.c	/^static void __init_memblock memblock_dump(struct memblock_type *type,$/;"	f	file:
memblock_dump_all	lib/mm/memblock.c	/^void __init_memblock memblock_dump_all(void)$/;"	f
memblock_find_base	lib/mm/memblock.c	/^static phys_addr_t __init_memblock memblock_find_base(phys_addr_t size,$/;"	f	file:
memblock_find_region	lib/mm/memblock.c	/^static phys_addr_t memblock_find_region(phys_addr_t start,phys_addr_t end,$/;"	f	file:
memblock_init	lib/mm/memblock.c	/^void __init memblock_init(void)$/;"	f
memblock_memory_can_coalesce	lib/mm/memblock.c	/^static int memblock_memory_can_coalesce(phys_addr_t addr1,$/;"	f	file:
memblock_overlaps_addr	lib/mm/memblock.c	/^static int memblock_overlaps_addr(phys_addr_t base1,phys_addr_t size1,$/;"	f	file:
memblock_overlaps_region	lib/mm/memblock.c	/^static int memblock_overlaps_region(struct memblock_type *type,$/;"	f	file:
memblock_region	include/linux/memblock.h	/^struct memblock_region {$/;"	s
memblock_region_memory_base_pfn	include/linux/memblock.h	/^static inline unsigned long memblock_region_memory_base_pfn($/;"	f
memblock_region_memory_end_pfn	include/linux/memblock.h	/^static inline unsigned long memblock_region_memory_end_pfn($/;"	f
memblock_region_reserved_base_pfn	include/linux/memblock.h	/^static inline unsigned long memblock_region_reserved_base_pfn($/;"	f
memblock_region_reserved_end_pfn	include/linux/memblock.h	/^static inline unsigned long memblock_region_reserved_end_pfn($/;"	f
memblock_regions_adjacent	lib/mm/memblock.c	/^static long memblock_regions_adjacent(struct memblock_type *type,$/;"	f	file:
memblock_remove_region	lib/mm/memblock.c	/^static void __init_memblock memblock_remove_region(struct memblock_type *type,$/;"	f	file:
memblock_reserve	lib/mm/memblock.c	/^int memblock_reserve(phys_addr_t base,phys_addr_t size)$/;"	f
memblock_set_current_limit	lib/mm/memblock.c	/^void memblock_set_current_limit(phys_addr_t limit)$/;"	f
memblock_type	include/linux/memblock.h	/^struct memblock_type {$/;"	s
meminfo	include/linux/setup.h	/^struct meminfo {$/;"	s
meminfo	lib/boot_arch.c	/^struct meminfo meminfo = {$/;"	v	typeref:struct:meminfo
memmap_context	include/linux/mmzone.h	/^enum memmap_context {$/;"	g
memmap_init	lib/mm/page_alloc.c	240;"	d	file:
memmap_init_zone	lib/mm/page_alloc.c	/^void __meminit memmap_init_zone(unsigned long size,int nid,unsigned long zone,$/;"	f
memory	include/linux/memblock.h	/^	struct memblock_type memory;$/;"	m	struct:memblock	typeref:struct:memblock::memblock_type
memory_array0	lib/boot_arch.c	/^unsigned int memory_array0[CONFIG_BANK0_SIZE \/ BYTE_MODIFY];$/;"	v
memory_array1	lib/boot_arch.c	/^unsigned int memory_array1[CONFIG_BANK1_SIZE \/ BYTE_MODIFY];	$/;"	v
memory_size	include/linux/memblock.h	/^	unsigned long memory_size;$/;"	m	struct:memblock
min	include/linux/kernel.h	26;"	d
min_low_pfn	lib/mm/bootmem.c	/^unsigned long min_low_pfn;$/;"	v
mm_debug	include/linux/debug.h	10;"	d
mm_debug	include/linux/debug.h	12;"	d
mm_err	include/linux/debug.h	16;"	d
mm_init	init/main.c	/^static void __init mm_init(void)$/;"	f	file:
mm_init_owner	lib/mm/fork.c	/^void mm_init_owner(struct mm_struct *mm,struct task_struct *p)$/;"	f
mm_struct	include/linux/mm_type.h	/^struct mm_struct {$/;"	s
mminit_level	include/linux/internal.h	/^enum mminit_level {$/;"	g
mminit_loglevel	lib/mm/mm_init.c	/^int mminit_loglevel;$/;"	v
mminit_verify_page_links	lib/mm/mm_init.c	/^void __meminit mminit_verify_page_links(struct page *page,enum zone_type zone,$/;"	f
mminit_verify_zonelist	lib/mm/mm_init.c	/^void mminit_verify_zonelist(void)$/;"	f
name	include/asm/arch.h	/^	const char *name; \/* architecture name *\/$/;"	m	struct:machine_desc
name	include/linux/cgroup.h	/^	const char *name;$/;"	m	struct:cgroup_subsys
name	include/linux/ftree_event.h	/^	const char *name;$/;"	m	struct:trace_print_flags
name	include/linux/ioport.h	/^	const char *name;$/;"	m	struct:resource
name	include/linux/mmzone.h	/^	const char *name;$/;"	m	struct:zone
next	include/linux/list.h	/^	struct list_head *next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next_zones_zonelist	lib/mm/mmzone.c	/^struct zoneref *next_zones_zonelist(struct zoneref *z,$/;"	f
node_bootmem_map	include/linux/bootmem.h	/^	unsigned long *node_bootmem_map;$/;"	m	struct:bootmem_data
node_id	include/linux/mmzone.h	/^    unsigned long node_id;$/;"	m	struct:pglist_data
node_low_pfn	include/linux/bootmem.h	/^	unsigned long node_low_pfn;$/;"	m	struct:bootmem_data
node_mem_map	include/linux/mmzone.h	/^    struct page *node_mem_map;$/;"	m	struct:pglist_data	typeref:struct:pglist_data::page
node_min_pfn	include/linux/bootmem.h	/^	unsigned long node_min_pfn;$/;"	m	struct:bootmem_data
node_online	include/linux/nodemask.h	39;"	d
node_page_cgroup	include/linux/mmzone.h	/^	struct page_cgroup *node_page_cgroup;$/;"	m	struct:pglist_data	typeref:struct:pglist_data::page_cgroup
node_present_pages	include/linux/mmzone.h	/^    unsigned long node_present_pages;$/;"	m	struct:pglist_data
node_set_online	include/linux/nodemask.h	40;"	d
node_set_state	include/linux/nodemask.h	/^static inline void node_set_state(int node,enum node_states state)$/;"	f
node_spanned_pages	include/linux/mmzone.h	/^    unsigned long node_spanned_pages;$/;"	m	struct:pglist_data
node_start_pfn	include/linux/mmzone.h	/^    unsigned long node_start_pfn;$/;"	m	struct:pglist_data
node_state	include/linux/nodemask.h	/^static inline int node_state(int node,enum node_states state)$/;"	f
node_states	include/linux/nodemask.h	/^enum node_states {$/;"	g
node_zonelist	include/linux/gfp.h	/^static inline struct zonelist *node_zonelist(int nid,gfp_t flags)$/;"	f
node_zonelists	include/linux/mmzone.h	/^	struct zonelist node_zonelists[MAX_ZONELISTS];$/;"	m	struct:pglist_data	typeref:struct:pglist_data::zonelist
node_zones	include/linux/mmzone.h	/^    struct zone node_zones[MAX_NR_ZONES];$/;"	m	struct:pglist_data	typeref:struct:pglist_data::zone
nodemask_t	include/linux/nodemask.h	/^typedef struct {DECLARE_BITMAP(bits,MAX_NUMNODES);} nodemask_t;$/;"	t	typeref:struct:__anon11
nr	include/asm/arch.h	/^	unsigned int nr;  \/* architecture number *\/$/;"	m	struct:machine_desc
nr_all_pages	lib/mm/page_alloc.c	/^static unsigned long __meminitdata nr_all_pages;$/;"	v	file:
nr_banks	include/linux/setup.h	/^	int nr_banks;$/;"	m	struct:meminfo
nr_free	include/linux/mmzone.h	/^	unsigned long nr_free;$/;"	m	struct:free_area
nr_free_pagecache_pages	lib/mm/page_alloc.c	/^unsigned int nr_free_pagecache_pages(void)$/;"	f
nr_free_zone_pages	lib/mm/page_alloc.c	/^static unsigned int nr_free_zone_pages(int offset)$/;"	f	file:
nr_irqs	include/asm/arch.h	/^	unsigned int nr_irqs;      \/* number of IRQs *\/$/;"	m	struct:machine_desc
nr_kernel_pages	lib/mm/page_alloc.c	/^static unsigned long __meminitdata nr_kernel_pages;$/;"	v	file:
nr_online_nodes	include/linux/nodemask.h	26;"	d
nr_ptes	include/linux/mm_type.h	/^	unsigned long stack_vm,reserved_vm,def_flags,nr_ptes;$/;"	m	struct:mm_struct
nr_saved_scan	include/linux/mmzone.h	/^	unsigned long nr_saved_scan[NR_LRU_LISTS];$/;"	m	struct:zone_reclaim_stat
nr_zones	include/linux/mmzone.h	/^    int nr_zones;$/;"	m	struct:pglist_data
num_physpages	lib/mm/memory.c	/^unsigned long num_physpages;$/;"	v
numa_node_id	lib/mm/page_alloc.c	/^static inline int numa_node_id(void)$/;"	f	file:
objects	include/linux/mm_type.h	/^			u16 objects;$/;"	m	struct:page::__anon5::__anon6
offsetof	include/linux/kernel.h	43;"	d
owner	include/linux/mm_type.h	/^	struct task_struct *owner;$/;"	m	struct:mm_struct	typeref:struct:mm_struct::task_struct
page	include/linux/mm_type.h	/^struct page {$/;"	s
page	include/linux/page_cgroup.h	/^	struct page *page;$/;"	m	struct:page_cgroup	typeref:struct:page_cgroup::page
page	lib/mm/highmem.c	/^	struct page *page;$/;"	m	struct:page_address_map	typeref:struct:page_address_map::page	file:
page_address	lib/mm/highmem.c	/^void *page_address(struct page *page)$/;"	f
page_address_htable	lib/mm/highmem.c	/^} page_address_htable[1 << PA_HASH_ORDER];$/;"	v	typeref:struct:page_address_slot	file:
page_address_map	lib/mm/highmem.c	/^struct page_address_map {$/;"	s	file:
page_address_slot	lib/mm/highmem.c	/^static struct page_address_slot {$/;"	s	file:
page_alloc_cpu_notify	lib/mm/page_alloc.c	/^static int page_alloc_cpu_notify(void) {}$/;"	f	file:
page_alloc_init	lib/mm/page_alloc.c	/^void __init page_alloc_init(void)$/;"	f
page_cgroup	include/linux/page_cgroup.h	/^struct page_cgroup {$/;"	s
page_cgroup_init_flatmem	lib/mm/page_cgroup.c	/^void __init page_cgroup_init_flatmem(void)$/;"	f
page_debug_flags	include/linux/page-debug-flags.h	/^enum page_debug_flags {$/;"	g
page_group_by_mobility_disabled	lib/mm/mmzone.c	/^int page_group_by_mobility_disabled;$/;"	v
page_is_buddy	lib/mm/page_alloc.c	/^static inline int page_is_buddy(struct page *page,struct page *buddy,$/;"	f	file:
page_is_consistent	lib/mm/page_alloc.c	/^static int page_is_consistent(struct zone *zone,struct page *page)$/;"	f	file:
page_order	include/linux/internal.h	/^static inline unsigned long page_order(struct page *page)$/;"	f
page_outside_zone_boundaries	lib/mm/page_alloc.c	/^static int page_outside_zone_boundaries(struct zone *zone,struct page *page)$/;"	f	file:
page_poison	lib/mm/debug-pagealloc.c	/^static inline int page_poison(struct page *page)$/;"	f	file:
page_slot	lib/mm/highmem.c	/^static struct page_address_slot *page_slot(struct page *page)$/;"	f	file:
page_to_pfn	include/linux/page.h	61;"	d
pageblock_bits	include/linux/pageblock-flags.h	/^enum pageblock_bits {$/;"	g
pageblock_default_order	lib/mm/page_alloc.c	/^static inline int pageblock_default_order(unsigned int order)$/;"	f	file:
pageblock_flags	include/linux/mmzone.h	/^	unsigned long *pageblock_flags;$/;"	m	struct:zone
pageblock_nr_pages	include/linux/pageblock-flags.h	6;"	d
pageblock_order	include/linux/pageblock-flags.h	5;"	d
pageflag_names	lib/mm/page_alloc.c	/^static struct trace_print_flags pageflag_names[] = {$/;"	v	typeref:struct:trace_print_flags	file:
pageflags	include/linux/page-flags.h	/^enum pageflags {$/;"	g
pages_scanned	include/linux/mmzone.h	/^	unsigned long pages_scanned;   \/* Since last reclaim *\/$/;"	m	struct:zone
pageset	include/linux/mmzone.h	/^	struct per_cpu_pageset __percpu *pageset;$/;"	m	struct:zone	typeref:struct:zone::__percpu
paging_init	lib/mm/mmu.c	/^void __init paging_init(void)$/;"	f
panic	include/linux/debug.h	17;"	d
parent	include/linux/ioport.h	/^	struct resource *parent,*sibling,*child;$/;"	m	struct:resource	typeref:struct:resource::resource
pcp	include/linux/mmzone.h	/^	struct per_cpu_pages pcp;$/;"	m	struct:per_cpu_pageset	typeref:struct:per_cpu_pageset::per_cpu_pages
per_cpu_page	include/linux/mmzone.h	/^struct per_cpu_page {$/;"	s
per_cpu_pages	include/linux/mmzone.h	/^struct per_cpu_pages {$/;"	s
per_cpu_pageset	include/linux/mmzone.h	/^struct per_cpu_pageset {$/;"	s
pfn	include/linux/map.h	/^	unsigned long pfn;$/;"	m	struct:map_desc
pfn_pte	include/linux/pgtable.h	113;"	d
pfn_to_bitidx	lib/mm/page_alloc.c	/^static inline int pfn_to_bitidx(struct zone *zone,unsigned long pfn)$/;"	f	file:
pfn_to_mem	lib/mm/memblock.c	/^void *pfn_to_mem(unsigned int idx)$/;"	f
pfn_to_page	include/linux/page.h	53;"	d
pfn_to_phys	include/linux/page.h	37;"	d
pfn_to_virt	include/linux/page.h	40;"	d
pfn_valid	include/linux/mmzone.h	333;"	d
pfn_valid_within	include/linux/mmzone.h	334;"	d
pg_data_t	include/linux/mmzone.h	/^} pg_data_t;$/;"	t	typeref:struct:pglist_data
pgd	include/linux/mm_type.h	/^	pgd_t *pgd;$/;"	m	struct:mm_struct
pgd	include/linux/page.h	/^typedef struct { unsigned long pgd[2]; }   pgd_t;$/;"	m	struct:__anon3
pgd_addr_end	include/linux/pgtable.h	102;"	d
pgd_bad	include/linux/pgtable.h	89;"	d
pgd_clear	include/linux/pgtable.h	90;"	d
pgd_index	include/linux/pgtable.h	79;"	d
pgd_none	include/linux/pgtable.h	88;"	d
pgd_offset	include/linux/pgtable.h	80;"	d
pgd_offset_k	include/linux/pgtable.h	81;"	d
pgd_t	include/linux/page.h	/^typedef struct { unsigned long pgd[2]; }   pgd_t;$/;"	t	typeref:struct:__anon3
pgd_val	include/linux/pgtable.h	87;"	d
pgdat_page_cgroup_init	lib/mm/page_alloc.c	/^static inline void pgdat_page_cgroup_init(struct pglist_data *pgdat) {}$/;"	f	file:
pgdat_resize_init	lib/mm/page_alloc.c	/^static inline void pgdat_resize_init(struct pglist_data *pgdat) {}$/;"	f	file:
pglist_data	include/linux/mmzone.h	/^typedef struct pglist_data {$/;"	s
pgoff_t	include/linux/types.h	21;"	d
pgprot	include/linux/page.h	/^typedef struct { unsigned long pgprot; }   pgprot_t;$/;"	m	struct:__anon4
pgprot_kernel	lib/mm/mmu.c	/^pgprot_t pgprot_kernel;$/;"	v
pgprot_t	include/linux/page.h	/^typedef struct { unsigned long pgprot; }   pgprot_t;$/;"	t	typeref:struct:__anon4
pgprot_user	lib/mm/mmu.c	/^pgprot_t pgprot_user;$/;"	v
pgprot_val	include/linux/page.h	16;"	d
phys_addr_t	include/linux/types.h	/^typedef unsigned int phys_addr_t;$/;"	t
phys_to_mem	lib/boot_arch.c	/^void *phys_to_mem(phys_addr_t addr)$/;"	f
phys_to_pfn	include/linux/page.h	38;"	d
phys_to_virt	include/linux/page.h	36;"	d
pkmap_page_table	lib/mm/highmem.c	/^pte_t *pkmap_page_table;$/;"	v
pmd	include/linux/page.h	/^typedef struct { unsigned long pmd; }      pmd_t;$/;"	m	struct:__anon2
pmd	lib/mm/mmu.c	/^	unsigned int pmd;$/;"	m	struct:cachepolicy	file:
pmd_bad	include/linux/pgtable.h	97;"	d
pmd_clear	include/linux/pgtable.h	98;"	d
pmd_none	include/linux/pgtable.h	96;"	d
pmd_off_k	include/linux/pgtable.h	101;"	d
pmd_offset	include/linux/pgtable.h	82;"	d
pmd_page_vaddr	include/linux/pgtable.h	109;"	d
pmd_t	include/linux/page.h	/^typedef struct { unsigned long pmd; }      pmd_t;$/;"	t	typeref:struct:__anon2
pmd_val	include/linux/pgtable.h	95;"	d
poison_highpage	lib/mm/debug-pagealloc.c	/^static void poison_highpage(struct page *page)$/;"	f	file:
poison_page	lib/mm/debug-pagealloc.c	/^static void poison_page(struct page *page)$/;"	f	file:
poison_pages	lib/mm/debug-pagealloc.c	/^static void poison_pages(struct page *page,int n)$/;"	f	file:
policy	lib/mm/mmu.c	/^	const char policy[16];$/;"	m	struct:cachepolicy	file:
populated_zone	lib/mm/page_alloc.c	/^inline int populated_zone(struct zone *zone)$/;"	f
prefetch	include/linux/prefetch.h	5;"	d
prefetchw	include/linux/prefetch.h	4;"	d
prepare_page_table	lib/mm/mmu.c	/^static inline void prepare_page_table(void)$/;"	f	file:
present_pages	include/linux/mmzone.h	/^	unsigned long present_pages;$/;"	m	struct:zone
prev	include/linux/list.h	/^	struct list_head *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
protection_map	lib/mm/mmap.c	/^pgprot_t protection_map[16] = {$/;"	v
pte	include/linux/page.h	/^typedef struct { pteval_t pte; }           pte_t;$/;"	m	struct:__anon1
pte	lib/mm/mmu.c	/^	pteval_t pte;$/;"	m	struct:cachepolicy	file:
pte_hidden	include/linux/pgtable.h	/^static inline int pte_hidden(pte_t pte)$/;"	f
pte_index	include/linux/pgtable.h	110;"	d
pte_offset_kernel	include/linux/pgtable.h	111;"	d
pte_t	include/linux/page.h	/^typedef struct { pteval_t pte; }           pte_t;$/;"	t	typeref:struct:__anon1
pte_val	include/linux/page.h	15;"	d
pteval_t	include/linux/page.h	/^typedef unsigned long pteval_t;$/;"	t
recent_rotated	include/linux/mmzone.h	/^	unsigned long recent_rotated[2];$/;"	m	struct:zone_reclaim_stat
recent_scanned	include/linux/mmzone.h	/^	unsigned long recent_scanned[2];$/;"	m	struct:zone_reclaim_stat
reclaim_stat	include/linux/mmzone.h	/^	struct zone_reclaim_stat reclaim_stat;$/;"	m	struct:zone	typeref:struct:zone::zone_reclaim_stat
regions	include/linux/memblock.h	/^	struct memblock_region *regions;$/;"	m	struct:memblock_type	typeref:struct:memblock_type::memblock_region
request_resource	lib/kernel/resource.c	/^int request_resource(struct resource *root,struct resource *new)$/;"	f
request_resource_conflict	lib/kernel/resource.c	/^struct resource *request_resource_conflict(struct resource *root,struct resource *new)$/;"	f
request_standard_resource	lib/kernel/setup.c	/^static void __init request_standard_resource(struct machine_desc *mdesc)$/;"	f	file:
reserve_bootmem	lib/mm/bootmem.c	/^int __init reserve_bootmem(unsigned long addr,unsigned long size,$/;"	f
reserve_crashkernel	lib/kernel/setup.c	/^static inline void reserve_crashkernel(void) {}$/;"	f	file:
reserve_lp0	include/asm/arch.h	/^	unsigned int reserve_lp0:1;  \/* never has lp0 *\/$/;"	m	struct:machine_desc
reserve_lp1	include/asm/arch.h	/^	unsigned int reserve_lp1:1;  \/* never has lp1 *\/$/;"	m	struct:machine_desc
reserve_lp2	include/asm/arch.h	/^	unsigned int reserve_lp2:1;  \/* never has lp2 *\/$/;"	m	struct:machine_desc
reserved	include/linux/memblock.h	/^	struct memblock_type reserved;$/;"	m	struct:memblock	typeref:struct:memblock::memblock_type
reserved_vm	include/linux/mm_type.h	/^	unsigned long stack_vm,reserved_vm,def_flags,nr_ptes;$/;"	m	struct:mm_struct
resource	include/linux/ioport.h	/^struct resource {$/;"	s
resource_size_t	include/linux/types.h	/^typedef phys_addr_t resource_size_t;$/;"	t
rmv_page_order	lib/mm/page_alloc.c	/^static inline void rmv_page_order(struct page *page)$/;"	f	file:
roundup	include/linux/kernel.h	36;"	d
s16	include/linux/types.h	/^typedef short           s16;$/;"	t
s32	include/linux/types.h	/^typedef int             s32;$/;"	t
s8	include/linux/types.h	/^typedef signed char     s8;$/;"	t
sanity_check_meminfo	lib/mm/mmu.c	/^static void __init sanity_check_meminfo(void)$/;"	f	file:
set_bit	lib/bitmap.c	/^void set_bit(int nr,unsigned int *byte)$/;"	f
set_page_count	include/linux/internal.h	/^static inline void set_page_count(struct page *page,int v)$/;"	f
set_page_order	lib/mm/page_alloc.c	/^static inline void set_page_order(struct page *page,int order)$/;"	f	file:
set_page_poison	lib/mm/debug-pagealloc.c	/^static inline set_page_poison(struct page *page)$/;"	f	file:
set_page_refcounted	include/linux/internal.h	/^static inline void set_page_refcounted(struct page *page)$/;"	f
set_pageblock_flags_group	lib/mm/page_alloc.c	/^void set_pageblock_flags_group(struct page *page,unsigned long flags,$/;"	f
set_pageblock_migratetype	lib/mm/page_alloc.c	/^static void set_pageblock_migratetype(struct page *page,int migratetype)$/;"	f	file:
set_pageblock_order	lib/mm/page_alloc.c	87;"	d	file:
set_pte_ext	lib/mm/mmu.c	/^void set_pte_ext(phys_addr_t addr,unsigned long pte)$/;"	f
set_zonelist_order	lib/mm/page_alloc.c	/^static void set_zonelist_order(void)$/;"	f	file:
setup_arch	lib/kernel/setup.c	/^void __init setup_arch(void)$/;"	f
setup_machine	lib/kernel/setup.c	/^static struct machine_desc * __init setup_machine(unsigned int nr)$/;"	f	file:
setup_usemap	lib/mm/page_alloc.c	/^static void __init setup_usemap(struct pglist_data *pgdat,$/;"	f	file:
shared_vm	include/linux/mm_type.h	/^	unsigned long total_vm,locked_vm,shared_vm,exec_vm;$/;"	m	struct:mm_struct
sibling	include/linux/cgroup.h	/^	struct list_head sibling;$/;"	m	struct:cgroup_subsys	typeref:struct:cgroup_subsys::list_head
sibling	include/linux/ioport.h	/^	struct resource *parent,*sibling,*child;$/;"	m	struct:resource	typeref:struct:resource::
size	include/linux/memblock.h	/^	unsigned long size;$/;"	m	struct:memblock_region
size	include/linux/setup.h	/^	unsigned int size;$/;"	m	struct:membank
spanned_pages	include/linux/mmzone.h	/^	unsigned long spanned_pages;$/;"	m	struct:zone
spin_lock_init	lib/mm/page_alloc.c	/^static inline void spin_lock_init(struct zone *zone) {}$/;"	f	file:
stack_vm	include/linux/mm_type.h	/^	unsigned long stack_vm,reserved_vm,def_flags,nr_ptes;$/;"	m	struct:mm_struct
start	include/linux/ioport.h	/^	resource_size_t start;$/;"	m	struct:resource
start	include/linux/setup.h	/^	unsigned int start;$/;"	m	struct:membank
start_brk	include/linux/mm_type.h	/^	unsigned long start_brk,brk,start_stack;$/;"	m	struct:mm_struct
start_code	include/linux/mm_type.h	/^	unsigned long start_code,end_code,start_data,end_data;$/;"	m	struct:mm_struct
start_data	include/linux/mm_type.h	/^	unsigned long start_code,end_code,start_data,end_data;$/;"	m	struct:mm_struct
start_kernel	init/main.c	/^static void start_kernel(void)$/;"	f	file:
start_stack	include/linux/mm_type.h	/^	unsigned long start_brk,brk,start_stack;$/;"	m	struct:mm_struct
state	include/linux/sched.h	/^	unsigned long state;$/;"	m	struct:task_struct
subsys_id	include/linux/cgroup.h	/^	int subsys_id;$/;"	m	struct:cgroup_subsys
swapper_pg_dir	include/linux/highmem.h	9;"	d
sysctl_overcommit_memory	lib/mm/mmap.c	/^int sysctl_overcommit_memory = OVERCOMMIT_GUESS;  \/* heuristic overcommit *\/$/;"	v
system_state	include/linux/config.h	66;"	d
task_struct	include/linux/sched.h	/^struct task_struct {$/;"	s
test_and_clear_bit	lib/bitmap.c	/^int test_and_clear_bit(int nr,unsigned int *byte)$/;"	f
test_and_set_bit	lib/bitmap.c	/^int test_and_set_bit(int nr,unsigned int *byte)$/;"	f
test_bit	lib/bitmap.c	/^int test_bit(int nr,unsigned int *byte)$/;"	f
this_cpu_ptr	include/linux/percpu.h	4;"	d
top_mem	include/linux/memblock.h	55;"	d
top_pmd	lib/mm/mmu.c	/^pmd_t *top_pmd;$/;"	v
total_usage	lib/mm/page_cgroup.c	/^static unsigned long total_usage;$/;"	v	file:
total_vm	include/linux/mm_type.h	/^	unsigned long total_vm,locked_vm,shared_vm,exec_vm;$/;"	m	struct:mm_struct
totalhigh_pages	lib/mm/memory.c	/^unsigned long totalhigh_pages;$/;"	v
totalram_pages	lib/mm/memory.c	/^unsigned long totalram_pages;$/;"	v
trace_mm_page_free_trace	lib/mm/page_alloc.c	/^static inline void trace_mm_page_free_trace(struct page *p,int order) {}$/;"	f	file:
trace_print_flags	include/linux/ftree_event.h	/^struct trace_print_flags {$/;"	s
true	include/linux/kernel.h	16;"	d
type	include/linux/map.h	/^	unsigned int type;$/;"	m	struct:map_desc
u16	include/linux/types.h	/^typedef unsigned short  u16;$/;"	t
u32	include/linux/types.h	/^typedef unsigned int    u32;$/;"	t
u8	include/linux/types.h	/^typedef unsigned char   u8;$/;"	t
unlikely	include/linux/kernel.h	58;"	d
unpoison_highpage	lib/mm/debug-pagealloc.c	/^static void unpoison_highpage(struct page *page)$/;"	f	file:
unpoison_page	lib/mm/debug-pagealloc.c	/^static void unpoison_page(struct page *page)$/;"	f	file:
unpoison_pages	lib/mm/debug-pagealloc.c	/^static void unpoison_pages(struct page *page,int n)$/;"	f	file:
usemap_size	lib/mm/page_alloc.c	/^static unsigned long __init usemap_size(unsigned long zonesize)$/;"	f	file:
vectors_page	lib/mm/traps.c	/^void *vectors_page;$/;"	v
video_end	include/asm/arch.h	/^	unsigned int video_end;    \/* end of video RAM *\/$/;"	m	struct:machine_desc
video_ram	lib/kernel/setup.c	49;"	d	file:
video_start	include/asm/arch.h	/^	unsigned int video_start;  \/* start of video RAM *\/$/;"	m	struct:machine_desc
virt_arch_init	lib/boot_arch.c	/^void virt_arch_init(void)$/;"	f
virt_to_page	include/linux/memory.h	33;"	d
virt_to_pfn	include/linux/page.h	39;"	d
virt_to_phys	include/linux/page.h	35;"	d
virtual	lib/mm/highmem.c	/^	void *virtual;$/;"	m	struct:page_address_map	file:
vm_stat	include/linux/mmzone.h	/^	atomic_long_t vm_stat[NR_VM_ZONE_STAT_ITEMS];$/;"	m	struct:zone
vm_stat	include/linux/vmstat.h	/^atomic_long_t vm_stat[NR_VM_ZONE_STAT_ITEMS];$/;"	v
vm_total_pages	lib/mm/vmscan.c	/^long vm_total_pages; \/* The total number of pages which the VM controls*\/$/;"	v
vmalloc_min	lib/mm/mmu.c	/^void *vmalloc_min = (void *)(VMALLOC_END - SZ_128M);$/;"	v
watermark	include/linux/mmzone.h	/^	unsigned long watermark[NR_WMARK];$/;"	m	struct:zone
z_to_n	include/linux/mmzone.h	/^	unsigned short z_to_n[MAX_ZONES_PER_ZONELIST]; \/* zone->nid *\/$/;"	m	struct:zonelist_cache
zap_zone_vm_stats	include/linux/vmstat.h	/^static inline void zap_zone_vm_stats(struct zone *zone)$/;"	f
zlcache_ptr	include/linux/mmzone.h	/^	struct zonelist_cache *zlcache_ptr; \/* NULL or &zlcache *\/$/;"	m	struct:zonelist	typeref:struct:zonelist::zonelist_cache
zone	include/linux/mmzone.h	/^	struct zone *zone;$/;"	m	struct:zoneref	typeref:struct:zoneref::zone
zone	include/linux/mmzone.h	/^struct zone {$/;"	s
zone_absent_pages_in_node	lib/mm/page_alloc.c	/^inline unsigned long __meminit zone_absent_pages_in_node(int nid,$/;"	f
zone_idx	include/linux/mmzone.h	/^	int zone_idx;$/;"	m	struct:zoneref
zone_idx	include/linux/mmzone.h	289;"	d
zone_init_free_lists	lib/mm/page_alloc.c	/^static void __meminit zone_init_free_lists(struct zone *zone)$/;"	f	file:
zone_lru	include/linux/mmzone.h	/^	struct zone_lru {$/;"	s	struct:zone
zone_movable_is_highmem	include/linux/mmzone.h	/^static inline int zone_movable_is_highmem(void)$/;"	f
zone_names	lib/mm/page_alloc.c	/^static char *const zone_names[MAX_NR_ZONES] = {$/;"	v	file:
zone_page_state_add	include/linux/vmstat.h	/^static inline void zone_page_state_add(long x,struct zone *zone,$/;"	f
zone_pcp_init	lib/mm/page_alloc.c	/^static inline void zone_pcp_init(struct zone *zone) {}$/;"	f	file:
zone_pgdat	include/linux/mmzone.h	/^	struct pglist_data *zone_pgdat;$/;"	m	struct:zone	typeref:struct:zone::pglist_data
zone_reclaim_stat	include/linux/mmzone.h	/^struct zone_reclaim_stat {$/;"	s
zone_seqlock_init	lib/mm/page_alloc.c	/^static inline void zone_seqlock_init(struct zone *zone) {}$/;"	f	file:
zone_span_seqbegin	include/linux/memory_hotplug.h	/^static inline unsigned zone_span_seqbegin(struct zone *zone)$/;"	f
zone_span_seqretry	include/linux/memory_hotplug.h	/^static inline int zone_span_seqretry(struct zone *zone,unsigned iv)$/;"	f
zone_spanned_pages_in_node	lib/mm/page_alloc.c	/^inline unsigned long __meminit zone_spanned_pages_in_node(int nid,$/;"	f
zone_start_pfn	include/linux/mmzone.h	/^	unsigned long zone_start_pfn;$/;"	m	struct:zone
zone_stat_item	include/linux/mmzone.h	/^enum zone_stat_item {$/;"	g
zone_type	include/linux/mmzone.h	/^enum zone_type {$/;"	g
zone_wait_table_init	lib/mm/page_alloc.c	/^static int zone_wait_table_init(struct zone *zone,$/;"	f	file:
zone_watermarks	include/linux/mmzone.h	/^enum zone_watermarks {$/;"	g
zonelist	include/linux/mmzone.h	/^struct zonelist {$/;"	s
zonelist_cache	include/linux/mmzone.h	/^struct zonelist_cache {$/;"	s
zonelist_order_name	lib/mm/page_alloc.c	/^static char zonelist_order_name[3][8] = {"Default","Node","Zone"};$/;"	v	file:
zonelist_zone	include/linux/mmzone.h	/^static inline struct zone *zonelist_zone(struct zoneref *zoneref)$/;"	f
zonelist_zone_idx	include/linux/mmzone.h	/^static inline int zonelist_zone_idx(struct zoneref *zoneref)$/;"	f
zoneref	include/linux/mmzone.h	/^struct zoneref {$/;"	s
zoneref_set_zone	lib/mm/page_alloc.c	/^static void zoneref_set_zone(struct zone *zone,struct zoneref *zoneref)$/;"	f	file:
zref_in_nodemask	lib/mm/mmzone.c	/^static inline int zref_in_nodemask(struct zoneref *zref,nodemask_t *nodes)$/;"	f	file:
